import maya.cmds as cmds
import pymel.core as pm
import maya.mel as mel
import maya.api.OpenMaya as om
ccWin = 'ctrlCreatorWin'
ctrlColor = 'ctrlColor'
groupsNum = 'groupsNum'
ColorCurve1 = 3 # xam
ColorCurve2 = 18 # xanh
ColorCurve3 = 17 # vang
ColorCurve4 = 17 # vang
ColorCurve5 = 17 # vang
ColorCurve6 = 17 # vang
ColorCurve7 = 17 # vang


################################################################ code curve
def createCodeCurve_ctt(*arg):
    mel.eval("""
    string $sel[],$shps[],$curve,$locProxy[],$LocAr[],$round;
    string $strPos,$cuvCode[],$code;
    float $cuvPos[];
    
    $sel = `ls -sl`;
    $shps = `listRelatives -s $sel[0]`;
    $curve = $shps[0];

    $round = `textField -q -tx tx_roundNum_ctt`;
    
    int $numSpans = `getAttr ( $curve + ".spans" )`;
    int $degree   = `getAttr ( $curve + ".degree" )`;
    int $form     = `getAttr ( $curve + ".form" )`;
    int $numCVs   = $numSpans + $degree;

    for ($i=0;$i<$numCVs;$i++){
        $cuvPos = `pointPosition -w ($sel[0] + ".cv[" + $i + "]")`;
        $cuvPos[0] = python( "round(" + $cuvPos[0] + ","+ $round + ")");
        $cuvPos[1] = python( "round(" + $cuvPos[1] + ","+ $round + ")");
        $cuvPos[2] = python( "round(" + $cuvPos[2] + ","+ $round + ")");
        $strPos = floatArrayToString( $cuvPos, " ");
        $strPos = ("-p " + $strPos + "");
        $cuvCode[$i] = $strPos; 
    }
    stringArrayInsertAtIndex(0, $cuvCode, ("curve -d " + $degree));
    $code = stringArrayToString($cuvCode, " ");
    $code = $code + ";";
    scrollField -e -tx $code tx_codeCTL_ctt;
    
    """)
################################################################
def edgeToCurve(*arg):
    selected_edges = cmds.ls(selection=True, flatten=True)
    number_degree = float(cmds.textField("degree_text", query=True, text=True))
    if selected_edges:
        curve_name = cmds.polyToCurve(form=2, degree=number_degree, conformToSmoothMeshPreview=1)[0]
        print("Edge to curve :", curve_name)
    else:
        print("Select edge !")


################################################################
def cubeCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)
        Curve = cmds.curve(name = obj + "_Ctrl", d=1, p=[(1, 1, 1),(1,1,-1) ,(1, -1, -1) ,(1, -1, 1) ,(-1, -1, 1) ,(-1, 1, 1) ,(1, 1, 1) ,(1, -1, 1) ,(-1, -1, 1) ,(-1, -1, -1) ,(-1, 1, -1) ,(1, 1, -1) ,(1, -1, -1) ,(-1, -1, -1) ,(-1, 1, -1) ,(-1, 1, 1)], k = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])
        cmds.xform(Curve, worldSpace=True, translation=pivot_position)
        cmds.setAttr ('%s.overrideEnabled'%(Curve), True)
        cmds.setAttr ('%s.overrideColor'%(Curve), 15)
def handCircleCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)
        Curve = cmds.curve(name = obj + "_Ctrl", d=3, p=[
        (-2, 0, 1),
        (-2.01, 0, 0.68),
        (-2, 0, 0),
        (-0.97, 0, -1.21),
        (0.97, 0, -1.21),
        (2, 0, 0),
        (2.01, 0, 0.64),
        (2, 0, 1)
    ])
        cmds.xform(Curve, worldSpace=True, translation=pivot_position)
        cmds.setAttr ('%s.overrideEnabled'%(Curve), True)
        cmds.setAttr ('%s.overrideColor'%(Curve), 15)

def pringleCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)
        Curve = cmds.circle (name =obj+ "_Ctrl", r = 2,nr =(0,1,0) )
        cmds.xform(Curve, worldSpace=True, translation=pivot_position)
        cmds.select ('PringleCurve.cv[7]','PringleCurve.cv[3]')
        cmds.move (0, -2 ,0, r = True)
        cmds.setAttr ('%s.overrideEnabled'%(Curve[0]), 1)
        cmds.setAttr ('%s.overrideColor'%(Curve[0]), 15)
        cmds.select(Curve)

def handCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)
        Curve = cmds.curve( p =[[0.7982363549443874, -0.03312381394884196, 0.0], [0.246083465367747, -0.033123657085117816, 0.0], [-0.48278001289794936, -0.033123343357669525, 0.0], [-1.4825557066778388, 0.5726820184225275, 0.0], [-2.663688492765169, 2.7115049577573838, 0.0], [-3.1247693147700715, 3.254010024815882, 0.0], [-2.9412817125285353, 4.002830167445566, 0.0], [-2.1107110753984024, 4.085517598961959, 0.0], [-1.6908599024451583, 3.2224952161058953, 0.0], [-1.400467277219339, 2.647682334618429, 0.0], [-1.4004692670294752, 3.684792092308598, 0.0], [-1.400469267047782, 6.998794103871373, 0.0], [-0.9042252110773584, 7.137820711521537, 0.0], [-0.5228261595994259, 6.998789620250499, 0.0], [-0.5228279292069075, 5.403915926958552, 0.0], [-0.5228269979544187, 4.040448049933847, 0.0], [-0.3949846246752978, 4.040447831591451, 0.0], [-0.2180932090311397, 4.040446899463086, 0.0], [-0.21809354465088623, 5.715454672546393, 0.0], [-0.21809463304598897, 7.722113943947256, 0.0], [0.2451357512230513, 7.86113752895071, 0.0], [0.7066220583909373, 7.722113750990215, 0.0], [0.7066211505481725, 5.718312802074311, 0.0], [0.7066208961515005, 4.103016801105229, 0.0], [0.8410525122559298, 4.103020532229875, 0.0], [0.9966602778711925, 4.103016937008975, 0.0], [0.9966606415822326, 6.035575008902293, 0.0], [0.9966592015876571, 7.2635999499324635, 0.0], [1.4554726059774596, 7.455477082045534, 0.0], [1.9192120582357546, 7.243737117292962, 0.0], [1.9192106877909976, 5.966376670979836, 0.0], [1.9192103009877264, 3.9213588887276174, 0.0], [2.0230261830917007, 3.9213617215842027, 0.0], [2.116209263686871, 3.921358867869387, 0.0], [2.116209263692829, 5.380122221504778, 0.0], [2.1162073135002957, 6.246227931950929, 0.0], [2.596313005782029, 6.606062906787962, 0.0], [3.1196265628959137, 6.307385007325626, 0.0], [3.1196245993664937, 5.135493774335305, 0.0], [3.1196258860212227, 3.878459031126682, 0.0], [3.119624932673482, 2.571691249639972, 0.0], [3.158803975933098, 1.1030508178821383, 0.0], [2.169119497585999, -0.0331236473135145, 0.0], [1.4655497485583755, -0.0331235106546292, 0.0], [0.7982362310698355, -0.03312344232518655, 0.0]],
        per = False, d=1, k=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44])
        cmds.xform(Curve, worldSpace=True, translation=pivot_position)
        Curve = cmds.rebuildCurve(ch=0, rpo=1, rt=1, end = 1, kr =0, kcp =1, kep=1, kt=0,s=20,d=3,tol=0.01)
        cmds.setAttr ('%s.overrideEnabled'%(Curve[0]), 1)
        cmds.setAttr ('%s.overrideColor'%(Curve[0]), 15)
        cmds.rename(Curve, obj + '_Ctrl')

def footCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)
        Curve = cmds.curve( p =[[1.3484978854098617, 0.002162300000000264, 0.6510500531154664], [0.031939100000000095, 0.002162300000000293, -0.26168952655773037], [-1.476254185409861, -0.010811499999999735, 0.3957070531154665], [-1.3998607784989097, 0.002162300000000183, 2.42006135898006], [0.12644282473547985, 0.002162300000000065, 3.9004625425857276], [-1.2688091752645207, 0.0021622999999999348, 6.0319814574142745], [-1.5161647784989087, 0.002162299999999817, 7.952413641019943], [-0.5349241854098623, 0.0021622999999997357, 9.281393946884535], [0.7433230999999996, 0.0021622999999997066, 9.755701526557736], [1.983494385409861, 0.0021622999999997357, 8.917633946884537], [2.4626899784989105, 0.002162299999999817, 7.952413641019945], [2.673610375264521, 0.0021622999999999348, 6.031981457414275], [2.4349003752645206, 0.002162300000000065, 3.9004625425857284], [1.8967769784989115, 0.002162300000000183, 1.9800303589800583], [1.348,0.00216,0.651]],
        per = False, d=1, k=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,14])
        cmds.xform(Curve, worldSpace=True, translation=pivot_position)
        Curve = cmds.rebuildCurve(ch=0, rpo=1, rt=1, end = 1, kr =0, kcp =1, kep=1, kt=0,s=20,d=3,tol=0.01)
        cmds.setAttr ('%s.overrideEnabled'%(Curve[0]), 1)
        cmds.setAttr ('%s.overrideColor'%(Curve[0]), 15)
        cmds.rename(Curve, obj +'_Ctrl')
        cmds.displaySmoothness(du = 3,dv=3)   

def VerticalSlider(Name = 'Slider' , Size = 3, Square = False, Negatives = True,*args): 

    cmds.undoInfo(openChunk=True)    

    #General Info
    Name= Name
    Size =Size
    Color = 14
    Color2 = 17


    #TurnOff Symmetry
    cmds.symmetricModelling(symmetry=False)
    cmds.softSelect(sse=0)    
    #InnerForm
    Circulo = cmds.circle(n=Name)
    
    
        #Top
    cmds.select (str(Circulo[0]) +'.cv[0:2]')
    cmds.scale(1,1e-05,1, r= True, p = (0, 0.945903,0 ))
    cmds.move(0,Size,0, r= True)
    
        #Buttom
    cmds.select (str(Circulo[0]) +'.cv[4:6]')
    cmds.scale(1,1e-05,1, r= True, p = (0, -0.945903,0 ))
    if (Negatives):
        cmds.move(0,-Size,0, r= True)
            
        #Left
    cmds.select (str(Circulo[0]) +'.cv[6:7]',str(Circulo[0]) +'.cv[0]')
    cmds.scale(1e-05,1,1, r= True, p = ( 0.945903,0,0 ))
    if (Square):
        cmds.move(Size,0,0, r= True)
    
        #Right
    cmds.select (str(Circulo[0]) +'.cv[2:4]')
    cmds.scale(1e-05,1,1, r= True, p = ( -0.945903,0,0 ))
    if (Square):
        cmds.move(-Size,0,0, r= True)

    
    #MoverController
    
    cmds.select(cl = True)
    
    CirculoMover= cmds.circle(n = '%s_Mover' %(Name))
    CirculoMoverGrupo= cmds.group (CirculoMover, n = '%s_GRP' %(CirculoMover[0]))
    
    CirculoGrupo= cmds.group (Circulo, n = '%s_GRP' %(Circulo[0]))
    
    
    #Color
    cmds.setAttr ('%s.overrideEnabled'%(Circulo[0]), 1)
    cmds.setAttr ('%s.overrideColor'%(Circulo[0]), Color)
    cmds.setAttr ('%s.overrideEnabled'%(CirculoMover[0]), 1)
    cmds.setAttr ('%s.overrideColor'%(CirculoMover[0]), Color2)        
    
    
    cmds.select(CirculoMover[0])
    
    if Negatives == True:
        cmds.transformLimits (tx = (0,0), etx = (1,1))
        cmds.transformLimits (ty = (-Size,Size), ety = (1,1))
        cmds.transformLimits (tz = (0,0), etz = (1,1))
        
       
    else:
        cmds.transformLimits (tx = (0,0), etx = (1,1))
        cmds.transformLimits (ty = (0,Size), ety = (1,1))
        cmds.transformLimits (tz = (0,0), etz = (1,1))        

    if Square == True:                 
        cmds.transformLimits (tx = (-Size,Size), etx = (1,1))
        cmds.transformLimits (ty = (-Size,Size), ety = (1,1))
        cmds.transformLimits (tz = (0,0), etz = (1,1))      
          


    cmds.parent(str(Name) + '_Mover_GRP', str(Name))
    cmds.select(str(Name)+'_GRP')


    cmds.undoInfo(closeChunk=True)    

def groups():
    groupValue = cmds.intFieldGrp(groupsNum, query = 1, value1 = 1)
    return groupValue

def makeGroups(self):    
    selObj = cmds.ls(selection = 1)
    if len(selObj) == 0:
        if groups() == 0 :
            cmds.warning('Please input a number at "number of group:" ')
        else:
            cmds.group(empty = 1)
            for i in range(groups()-1):
                cmds.group()
    else:
        if groups() > 0:
            for j in range(len(selObj)):
                cmds.select(selObj[j])
                objRot = cmds.xform(selObj[j], query = 1, worldSpace = 1, rotation = 1)
                objTrans = cmds.xform(selObj[j], query = 1, worldSpace = 1, translation = 1)
                objScale = cmds.xform(selObj[j], query = 1, relative = 1, scale = 1)
                cmds.xform(selObj[j], worldSpace = 1, translation = (0,0,0), rotation = (0,0,0), scale = (1,1,1))
                for k in range(groups()):
                    cmds.group()
                    cmds.xform(pivots = (0, 0, 0))
                selGroup = cmds.ls(selection = 1)
                cmds.xform(selGroup, worldSpace = 1, translation = objTrans, rotation = objRot, scale = objScale)
                
def handPet(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)        
        group = cmds.group(empty=True,name = obj +"_grp")
        cmds.xform(group, worldSpace=True, translation=pivot_position)
        pawCtrl = cmds.curve( name="Paw_Ctrl", degree = 2,\
                                knot = [0, 0, 0.03125, 0.0625, 0.09375, 0.125, 0.15625, 0.1875, 0.21875, 0.25, 0.28125,\
                                        0.3125, 0.34375, 0.375, 0.40625, 0.4375, 0.46875, 0.5, 0.53125, 0.5625, 0.59375,\
                                        0.625, 0.65625, 0.6875, 0.71875, 0.75, 0.78125, 0.8125, 0.84375000000000011,\
                                        0.875, 0.90625, 0.9375, 0.96875, 1, 1],\
                                point = [(1.2760358807837899, -0.97838365661065585, 0),\
                                        (0.90814202020255952, -0.69662064413776004, 0),\
                                        (0.38216986052950103, -0.50348432875199789, -8.4709398363252871e-019),\
                                        (-0.099495232080049498, -0.41642425866385091, -1.9052679222664819e-018),\
                                        (-0.8179434195163503, -0.49339324922786321, -1.4830322280713755e-018),\
                                        (-1.3119400593594779, -0.86109674853764884, 6.7274539123863291e-018),\
                                        (-1.2779459679340806, -1.4713367597030014, -2.8882694283436788e-018),\
                                        (-0.60334366183634358, -1.7036354285180624, -1.3373038982381737e-017),\
                                        (-0.011917466409856942, -1.6990757065576552, -5.7173642517224206e-019),\
                                        (0.5702844021096648, -1.4300397328167522, 2.933244909221897e-017),\
                                        (1.2048356243487746, -1.7235495734005259, 7.1167824023927416e-018),\
                                        (1.1089403113033698, -2.2491812442752837, -1.1097876902128557e-016),\
                                        (0.38227812453539201, -2.2384939323474802, -1.6423150377622724e-016),\
                                        (-0.19423914124238653, -2.1661528138748154, -1.92998001638554e-016),\
                                        (-0.82373418287847866, -2.1942533359210592, -1.8536383724453082e-016),\
                                        (-1.4353205624286198, -2.3094990856093935, -1.3071211359465302e-016),\
                                        (-2.1478113629899105, -2.2756563786258233, -1.1845652744173071e-016),\
                                        (-2.6497715163869153, -1.939371278349626, -1.2258325700549487e-016),\
                                        (-2.7630913685427787, -1.3032204397322737, -1.868357371089103e-016),\
                                        (-2.5054176871230989, -0.70619044669475461, -2.5830054477709535e-016),\
                                        (-2.1032101903288907, -0.24862198960147786, -3.251080455544342e-016),\
                                        (-1.5843686162324753, 0.12719899303009496, -3.8141342345219598e-016),\
                                        (-1.0029689934902117, 0.38248169198978577, -4.2036792860554472e-016),\
                                        (-0.42131578809042419, 0.52595804679784708, -4.4312605036974659e-016),\
                                        (0.19849613061491012, 0.57116823817710305, -4.4842321471339974e-016),\
                                        (0.81673662601764507, 0.44968606313010318, -4.3676569896025518e-016),\
                                        (1.3858269320371137, 0.20758555690405656, -3.9816466614863837e-016),\
                                        (1.9145110538903138, -0.1296906841666976, -3.3332295691815949e-016),\
                                        (2.3439396207874093, -0.55888240118746091, -2.7860249287649361e-016),\
                                        (2.64766910436926, -1.131178705669494, -2.4181129437627538e-016),\
                                        (2.6176160844681737, -1.7788271973226091, -1.5947174925992623e-016),\
                                        (2.2478234742110157, -2.1839312462172291, -4.8766755489312473e-017),\
                                        (1.6342254918008643, -2.2134716564190371, 0),\
                                        (1.3410994874315185, -2.0800197971551282, 0)]\
                            )
        
        fingerCtrl1 = cmds.curve(name="Pinky_Ctrl", degree = 1,\
                                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],\
                                    point = [(-3.6946897904112177, 0.64218970589797353, 0),\
                                            (-3.6266386065840659, 0.31799776951128589, -7.4808172158191868e-017),\
                                            (-3.7687187258109178, 0.10434412909920532, -4.0450046324938557e-017),\
                                            (-3.8193249476843567, -0.14718552537798812, -9.9288192708233226e-022),\
                                            (-3.7687223072905844, -0.39872426540960704, 4.0449521629669752e-017),\
                                            (-3.6266433687565778, -0.61236796261865112, 7.4806048473922076e-017),\
                                            (-3.4129986699037471, -0.75444927863914901, 9.7654466712764472e-017),\
                                            (-3.1614634005240712, -0.80505309461244723, 1.0579218097543764e-016),\
                                            (-2.9099281311443979, -0.75444927863914835, 9.7654466712764361e-017),\
                                            (-2.6962834322915685, -0.61236796261864868, 7.4806048473921842e-017),\
                                            (-2.5542044937575641, -0.39872426540960437, 4.0449521629669382e-017),\
                                            (-2.5036018533637825, -0.14718552537798768, -9.9288192736921871e-022),\
                                            (-2.5542080752372387, 0.10434412909920843, -4.0450046324938643e-017),\
                                            (-2.6962881944640777, 0.317997769511285, -7.4808172158191954e-017),\
                                            (-2.909938261257893, 0.46005741661433097, -9.7653105769338831e-017),\
                                            (-3.1614634005240738, 0.51076389001845435, -1.0580732860597924e-016),\
                                            (-3.4129885397902733, 0.46005741661433097, -9.7653105769338794e-017),\
                                            (-3.6946897904112177, 0.64218970589797353, 0)]\
                                )

        fingerCtrl2 = cmds.curve(name="Ring_Ctrl", degree = 1,\
                                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],\
                                    point = [(-1.2696684120546053, 2.3094990856093935, 7.5738152707983916e-021),\
                                            (-1.355103987599422, 1.9894488744397196, -7.4800598342921068e-017),\
                                            (-1.578256781857672, 1.8628097463805529, -4.0442472509667758e-017),\
                                            (-1.7368401785606933, 1.661118241691208, 6.580933343716059e-021),\
                                            (-1.8050909656161429, 1.4137840648821234, 4.0457095444940552e-017),\
                                            (-1.7746054270660094, 1.1590279342956187, 7.4813622289192876e-017),\
                                            (-1.6479748196654769, 0.93587810351054879, 9.7662040528035272e-017),\
                                            (-1.4462772184349491, 0.7772943225276987, 1.0579975479070844e-016),\
                                            (-1.1989456093872457, 0.70904614966689339, 9.7662040528035161e-017),\
                                            (-0.94418751275990209, 0.73953335867077241, 7.4813622289192641e-017),\
                                            (-0.72104025570078079, 0.86616414402366182, 4.0457095444940182e-017),\
                                            (-0.56245595911385748, 1.0678653731412511, 6.5809333434291729e-021),\
                                            (-0.49421246543532582, 1.3151930552641216, -4.0442472509667844e-017),\
                                            (-0.52469457450496215, 1.5699585932937237, -7.4800598342921155e-017),\
                                            (-0.65133974361129943, 1.7930915032780432, -9.7645531954068031e-017),\
                                            (-0.85298201522037476, 1.9517623463094167, -1.0579975479070844e-016),\
                                            (-1.1003508700761979, 2.0199143218881388, -9.7645531954067994e-017),\
                                            (-1.2696684120546053, 2.3094990856093935, 7.5738152707983916e-021)]\
                                )
        fingerCtrl3 = cmds.curve(name="Mid_Ctrl", degree = 1,\
                                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],\
                                    point = [(1.2696684120546067, 2.3094990856093927, 4.5247657638222111e-016),\
                                            (1.3551039875994233, 1.9894488744397187, 3.6933453777881835e-016),\
                                            (1.5782567818576738, 1.8628097463805529, 4.2109245993543549e-016),\
                                            (1.7368401785606951, 1.6611182416912076, 4.6773898814187173e-016),\
                                            (1.8050909656161447, 1.4137840648821229, 5.0199246649480479e-016),\
                                            (1.7746054270660108, 1.1590279342956182, 5.1894934160886466e-016),\
                                            (1.6479748196654787, 0.93587810351054834, 5.1563383018721509e-016),\
                                            (1.4462772184349508, 0.77729432252769826, 4.9296735819803953e-016),\
                                            (1.198945609387247, 0.70904614966689294, 4.5402545768351787e-016),\
                                            (0.94418751275990298, 0.73953335867077197, 4.0501310978418361e-016),\
                                            (0.72104025570078212, 0.86616414402366138, 3.5325693120973891e-016),\
                                            (0.56245595911385882, 1.0678653731412506, 3.0660938053947725e-016),\
                                            (0.49421246543532715, 1.3151930552641211, 2.7235780185989287e-016),\
                                            (0.52469457450496348, 1.5699585932937232, 2.5539947235000181e-016),\
                                            (0.65133974361130076, 1.7930915032780423, 2.5871912578252132e-016),\
                                            (0.85298201522037609, 1.9517623463094158, 2.8136784861662301e-016),\
                                            (1.1003508700761993, 2.0199143218881388, 3.2032501712400782e-016),\
                                            (1.2696684120546067, 2.3094990856093927, 4.5247657638222111e-016)]\
                                )
                                
        fingerCtrl4 = cmds.curve(name="Index_Ctrl", degree = 1,\
                                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],\
                                    point = [(3.6946897904112177, 0.64218970589797353, 4.5246900256695025e-016),\
                                            (3.6266386065840659, 0.31799776951128589, 3.6932696396354754e-016),\
                                            (3.7687187258109178, 0.10434412909920532, 4.2108488612016468e-016),\
                                            (3.8193249476843567, -0.14718552537798812, 4.6773141432660087e-016),\
                                            (3.7687223072905844, -0.39872426540960704, 5.0198489267953393e-016),\
                                            (3.6266433687565778, -0.61236796261865112, 5.189417677935938e-016),\
                                            (3.4129986699037471, -0.75444927863914901, 5.1562625637194423e-016),\
                                            (3.1614634005240712, -0.80505309461244723, 4.9295978438276867e-016),\
                                            (2.9099281311443979, -0.75444927863914835, 4.5401788386824701e-016),\
                                            (2.6962834322915685, -0.61236796261864868, 4.050055359689128e-016),\
                                            (2.5542044937575641, -0.39872426540960437, 3.532493573944681e-016),\
                                            (2.5036018533637825, -0.14718552537798768, 3.0660180672420644e-016),\
                                            (2.5542080752372387, 0.10434412909920843, 2.7235022804462206e-016),\
                                            (2.6962881944640777, 0.317997769511285, 2.55391898534731e-016),\
                                            (2.909938261257893, 0.46005741661433097, 2.5871155196725051e-016),\
                                            (3.1614634005240738, 0.51076389001845435, 2.813602748013522e-016),\
                                            (3.4129885397902733, 0.46005741661433097, 3.2031744330873701e-016),\
                                            (3.6946897904112177, 0.64218970589797353, 4.5246900256695025e-016)]\
                                )
        cmds.xform(pawCtrl, worldSpace=True, translation=pivot_position)
        cmds.xform(fingerCtrl1, worldSpace=True, translation=pivot_position)
        cmds.xform(fingerCtrl2, worldSpace=True, translation=pivot_position)
        cmds.xform(fingerCtrl3, worldSpace=True, translation=pivot_position)
        cmds.xform(fingerCtrl4, worldSpace=True, translation=pivot_position)
        
        groupC1 = cmds.group(empty=True, name = obj + fingerCtrl1 + "_grp")
        cmds.xform(groupC1, worldSpace=True, translation=pivot_position)
        groupC2 = cmds.group(empty=True, name = obj + fingerCtrl1 + "_grp")
        cmds.xform(groupC2, worldSpace=True, translation=pivot_position)
        groupC3 = cmds.group(empty=True, name = obj + fingerCtrl1 + "_grp")
        cmds.xform(groupC3, worldSpace=True, translation=pivot_position)
        groupC4 = cmds.group(empty=True, name = obj + fingerCtrl1 + "_grp")
        cmds.xform(groupC4, worldSpace=True, translation=pivot_position)

        cmds.parent(pawCtrl, group)
        cmds.parent(fingerCtrl1, groupC1)
        cmds.parent(fingerCtrl2, groupC2)
        cmds.parent(fingerCtrl3, groupC3)
        cmds.parent(fingerCtrl4, groupC4)
        cmds.parent(groupC1, pawCtrl)
        cmds.parent(groupC2, pawCtrl)
        cmds.parent(groupC3, pawCtrl)
        cmds.parent(groupC4, pawCtrl)


def arrowTriangle(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)        
        curve = cmds.curve(name =obj+ "_Ctrl", degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6, 7],\
                    point = [(-2, 0, 0),\
                            (1, 0, 1),\
                            (1, 0, -1),\
                            (-2, 0, 0),\
                            (1, 1, 0),\
                            (1, 0, 0),\
                            (1, -1, 0),\
                            (-2, 0, 0)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def LocatorCurve(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)    
        curve = cmds.curve(name =obj+ "_Ctrl", degree = 1,
                    knot = [0, 1, 2, 3, 4, 5, 6, 7],
                    point = [(-2, 0, 0),
                            (2, 0, 0),
                            (0, 0, 0),
                            (0, 0, 2),
                            (0, 0, -2),
                            (0, 0, 0),
                            (0, 2, 0),
                            (0, -2, 0)])
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def circleD(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)  
        curve = cmds.curve(name = obj +"_Ctrl", degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
                            21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
                            39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52],\
                    point = [(0, 1, 0),(0, 0.92388000000000003, 0.382683),
                            (0, 0.70710700000000004, 0.70710700000000004),(0, 0.382683, 0.92388000000000003),(0, 0, 1),
                            (0, -0.382683, 0.92388000000000003),(0, -0.70710700000000004, 0.70710700000000004),
                            (0, -0.92388000000000003, 0.382683),(0, -1, 0),(0, -0.92388000000000003, -0.382683),
                            (0, -0.70710700000000004, -0.70710700000000004),(0, -0.382683, -0.92388000000000003),(0, 0, -1),
                            (0, 0.382683, -0.92388000000000003),(0, 0.70710700000000004, -0.70710700000000004),
                            (0, 0.92388000000000003, -0.382683),(0, 1, 0),(0.382683, 0.92388000000000003, 0),
                            (0.70710700000000004, 0.70710700000000004, 0),(0.92388000000000003, 0.382683, 0),(1, 0, 0),
                            (0.92388000000000003, -0.382683, 0),(0.70710700000000004, -0.70710700000000004, 0),
                            (0.382683, -0.92388000000000003, 0),(0, -1, 0),(-0.382683, -0.92388000000000003, 0),
                            (-0.70710700000000004, -0.70710700000000004, 0),(-0.92388000000000003, -0.382683, 0),(-1, 0, 0),
                            (-0.92388000000000003, 0.382683, 0),(-0.70710700000000004, 0.70710700000000004, 0),
                            (-0.382683, 0.92388000000000003, 0),(0, 1, 0),(0, 0.92388000000000003, -0.382683),
                            (0, 0.70710700000000004, -0.70710700000000004),(0, 0.382683, -0.92388000000000003),(0, 0, -1),
                            (-0.382683, 0, -0.92388000000000003),(-0.70710700000000004, 0, -0.70710700000000004),
                            (-0.92388000000000003, 0, -0.382683),(-1, 0, 0),(-0.92388000000000003, 0, 0.382683),
                            (-0.70710700000000004, 0, 0.70710700000000004),(-0.382683, 0, 0.92388000000000003),(0, 0, 1),
                            (0.382683, 0, 0.92388000000000003),(0.70710700000000004, 0, 0.70710700000000004),
                            (0.92388000000000003, 0, 0.382683),(1, 0, 0),(0.92388000000000003, 0, -0.382683),
                            (0.70710700000000004, 0, -0.70710700000000004),(0.382683, 0, -0.92388000000000003),(0, 0, -1)])
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def ccButton19(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve=cmds.curve(name = obj +"_Ctrl", degree = 1,\
                    knot = [0, 9.9992300000000007, 13.898834000000001, 17.798387999999999,\
                            21.697965, 25.597534, 35.596760000000003, 45.595986000000003,\
                            49.495555000000003, 53.395130999999999, 57.294685999999999,\
                            61.194290000000002, 71.193520000000007, 81.192749000000006,\
                            85.092258000000001, 88.991923, 92.891391999999996, 96.791135999999995,\
                            106.79113599999999, 116.79113599999999, 120.690881, 124.59035, 128.490015,\
                            132.38952399999999, 142.38875300000001, 162.38875300000001, 166.38875300000001,\
                            175.33302499999999, 184.277297, 188.277297, 192.277297, 201.22156899999999,\
                            210.165841, 215.82269500000001, 221.47954899999999, 227.136403,\
                            232.79325800000001, 236.79325800000001],\
                    point = [(7.8826092109875007e-016, 5.5999999999999917, 5.854783632927615e-017),\
                            (1.9998460000000011, 5.5999999999999917, -4.4471999999414518e-006),\
                            (1.8457720000000009, 5.5999999999999917, 0.76454620000000018),\
                            (1.4141046000000008, 5.5999999999999917, 1.4141032),\
                            (0.76454380000000088, 5.5999999999999917, 1.8457728),\
                            (7.8826092109875007e-016, 5.5999999999999917, 1.9998452000000002),\
                            (7.8826092109875007e-016, 5.5999999999999917, 5.854783632927615e-017),\
                            (7.8826092109875007e-016, 5.5999999999999917, 1.9998452000000002),\
                            (-0.76454379999999933, 5.5999999999999917, 1.8457728),\
                            (-1.414104599999999, 5.5999999999999917, 1.4141032),\
                            (-1.8457719999999991, 5.5999999999999917, 0.76454620000000018),\
                            (-1.9998459999999993, 5.5999999999999917, -4.4471999999414518e-006),\
                            (7.8826092109875007e-016, 5.5999999999999917, 5.854783632927615e-017),\
                            (-1.9998459999999993, 5.5999999999999917, -4.4471999999414518e-006),\
                            (-1.8457719999999991, 5.5999999999999917, -0.76453559999999987),\
                            (-1.414104599999999, 5.5999999999999917, -1.4141192),\
                            (-0.76454379999999933, 5.5999999999999917, -1.8457498000000001),\
                            (7.8826092109875007e-016, 5.5999999999999917, -2),\
                            (7.8826092109875007e-016, 5.5999999999999917, 5.854783632927615e-017),\
                            (7.8826092109875007e-016, 5.5999999999999917, -2),\
                            (0.76454380000000088, 5.5999999999999917, -1.8457498000000001),\
                            (1.4141046000000008, 5.5999999999999917, -1.4141192),\
                            (1.8457720000000009, 5.5999999999999917, -0.76453559999999987),\
                            (1.9998460000000011, 5.5999999999999917, -4.4471999999414518e-006),\
                            (7.8826092109875007e-016, 5.5999999999999917, 5.854783632927615e-017),\
                            (2.9840220143980878e-016, 1.5999999999999917, 5.854783632927615e-017),\
                            (2.9840220143980878e-016, 1.5999999999999917, 0.80000000000000016),\
                            (1.0245871357623221e-016, -8.8817841970012523e-015, 5.854783632927615e-017),\
                            (2.9840220143980878e-016, 1.5999999999999917, -0.79999999999999993),\
                            (2.9840220143980878e-016, 1.5999999999999917, 5.854783632927615e-017),\
                            (-0.79999999999999971, 1.5999999999999917, 5.854783632927615e-017),\
                            (1.0245871357623221e-016, -8.8817841970012523e-015, 5.854783632927615e-017),\
                            (0.80000000000000038, 1.5999999999999917, 5.854783632927615e-017),\
                            (2.9840220143980878e-016, 1.5999999999999917, 0.80000000000000016),\
                            (-0.79999999999999971, 1.5999999999999917, 5.854783632927615e-017),\
                            (2.9840220143980878e-016, 1.5999999999999917, -0.79999999999999993),\
                            (0.80000000000000038, 1.5999999999999917, 5.854783632927615e-017),\
                            (2.9840220143980878e-016, 1.5999999999999917, 5.854783632927615e-017)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def plusCurve(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0, 4.7999999999999998, 9.5999999999999996, 12.800000000000001, 17.600000000000001,\
                            22.399999999999999, 25.600000000000001, 30.399999999999999, 35.200000000000003,\
                            38.399999999999999, 43.200000000000003, 48, 51.200000000000003],\
                    point = [(-0.64000000000000012, -2.5600000000000005, 0),\
                            (-0.64000000000000012, -0.64000000000000012, 0),\
                            (-2.5600000000000005, -0.64000000000000012, 0),\
                            (-2.5600000000000005, 0.64000000000000012, 0),\
                            (-0.64000000000000012, 0.64000000000000012, 0),\
                            (-0.64000000000000012, 2.5600000000000005, 0),\
                            (0.64000000000000012, 2.5600000000000005, 0),\
                            (0.64000000000000012, 0.64000000000000012, 0),\
                            (2.5600000000000005, 0.64000000000000012, 0),\
                            (2.5600000000000005, -0.64000000000000012, 0),\
                            (0.64000000000000012, -0.64000000000000012, 0),\
                            (0.64000000000000012, -2.5600000000000005, 0),\
                            (-0.64000000000000012, -2.5600000000000005, 0)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def circleP(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)     
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],\
                    point = [(0, 0, -2),\
                            (0.76454380000000011, 0, -1.8457498000000001),\
                            (1.4141045999999999, 0, -1.4141192),\
                            (1.845772, 0, -0.76453559999999998),\
                            (1.9998460000000002, 0, -4.4471999999999995e-006),\
                            (1.845772, 0, 0.76454620000000006),\
                            (1.4141045999999999, 0, 1.4141032),\
                            (0.76454380000000011, 0, 1.8457728),\
                            (0, 0, 1.9998452000000002),\
                            (0, 0, 0),\
                            (0, 0, -2),\
                            (-0.76454380000000011, 0, -1.8457498000000001),\
                            (-1.4141045999999999, 0, -1.4141192),\
                            (-1.845772, 0, -0.76453559999999998),\
                            (-1.9998460000000002, 0, -4.4471999999999995e-006),\
                            (0, 0, 0),\
                            (1.9998460000000002, 0, -4.4471999999999995e-006),\
                            (1.845772, 0, 0.76454620000000006),\
                            (1.4141045999999999, 0, 1.4141032),\
                            (0.76454380000000011, 0, 1.8457728),\
                            (0, 0, 1.9998452000000002),\
                            (-0.76454380000000011, 0, 1.8457728),\
                            (-1.4141045999999999, 0, 1.4141032),\
                            (-1.845772, 0, 0.76454620000000006),\
                            (-1.9998460000000002, 0, -4.4471999999999995e-006)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def rotateCurve(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)     
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0, 2, 4.0871430000000002, 6.1743430000000004, 8.2614889999999992, 10.348646,\
                            12.435838, 14.522990999999999, 16.610143000000001, 18.697337999999998,\
                            20.784490000000002, 22.871642000000001, 24.958836000000002, 27.045988999999999,\
                            29.133140999999998, 31.220334999999999, 33.307487999999999, 35.394638999999998,\
                            37.481833999999999, 39.568986000000002, 41.686399999999999, 48.748496000000003,\
                            55.810591000000002, 58.009692000000001, 59.575055999999996, 61.140450999999999,\
                            62.705815999999999, 64.271180999999999, 65.836574999999996, 67.401939999999996,\
                            68.967304999999996, 70.532698999999994, 72.098063999999994, 73.663428999999994,\
                            75.228823000000006, 76.794188000000005, 78.359554000000003, 79.924946000000006,\
                            81.490313999999998, 83.055674999999994, 84.621072999999996, 86.186430999999999],\
                    point = [(0, 0, -2.4000000000000004),\
                            (0, 0, -3.2000000000000002),\
                            (0.82733600000000007, 0, -3.0881896000000002),\
                            (1.5986624000000003, 0, -2.7686900000000003),\
                            (2.2627592000000001, 0, -2.2627604000000003),\
                            (2.7686924000000004, 0, -1.5986616),\
                            (3.0881860000000003, 0, -0.82733640000000008),\
                            (3.2000248, 0, 2.0621280000000001e-007),\
                            (3.0881860000000003, 0, 0.82733600000000007),\
                            (2.7686924000000004, 0, 1.5986624000000003),\
                            (2.2627592000000001, 0, 2.2627592000000001),\
                            (1.5986624000000003, 0, 2.7686924000000004),\
                            (0.82733600000000007, 0, 3.0881860000000003),\
                            (0, 0, 3.2000248),\
                            (-0.82733600000000007, 0, 3.0881860000000003),\
                            (-1.5986624000000003, 0, 2.7686924000000004),\
                            (-2.2627592000000001, 0, 2.2627592000000001),\
                            (-2.7686924000000004, 0, 1.5986624000000003),\
                            (-3.0881860000000003, 0, 0.82733600000000007),\
                            (-3.2000248, 0, 2.0621280000000001e-007),\
                            (-4.0469904000000003, 0, 0),\
                            (-2.7836844000000003, 0, -2.5266120000000001),\
                            (-1.5203784000000002, 0, 0),\
                            (-2.4000184000000004, 0, 1.5477240000000003e-007),\
                            (-2.3161396000000001, 0, 0.62050240000000001),\
                            (-2.0765191999999999, 0, 1.1989964000000002),\
                            (-1.6970696000000001, 0, 1.6970692000000001),\
                            (-1.1989964000000002, 0, 2.0765191999999999),\
                            (-0.62050240000000001, 0, 2.3161396000000001),\
                            (0, 0, 2.4000184000000004),\
                            (0.62050240000000001, 0, 2.3161396000000001),\
                            (1.1989964000000002, 0, 2.0765191999999999),\
                            (1.6970696000000001, 0, 1.6970692000000001),\
                            (2.0765191999999999, 0, 1.1989964000000002),\
                            (2.3161396000000001, 0, 0.62050240000000001),\
                            (2.4000184000000004, 0, 1.5477240000000003e-007),\
                            (2.3161396000000001, 0, -0.62050280000000013),\
                            (2.0765191999999999, 0, -1.198996),\
                            (1.6970696000000001, 0, -1.6970704000000003),\
                            (1.1989964000000002, 0, -2.0765176000000003),\
                            (0.62050240000000001, 0, -2.3161420000000001),\
                            (0, 0, -2.4000000000000004)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        


def axisC(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0, 1.411065, 6.7736340000000004, 12.136203, 13.547268000000001, 18.909838000000001,\
                            24.272407000000001, 25.683471000000001, 31.046040999999999, 36.408610000000003,\
                            37.819674999999997, 43.182243999999997, 48.544812999999998, 49.955877999999998,\
                            55.318447999999997, 60.681016999999997, 62.092081999999998, 67.454650999999998,\
                            95.205282999999994, 122.955915, 128.31848400000001, 129.72954899999999, 135.092118,\
                            140.45468700000001, 141.86575199999999, 143.27681699999999, 144.687883, 150.05045200000001,\
                            155.41302099999999, 156.82408599999999, 162.186655, 167.54922400000001, 168.96028999999999,\
                            174.32285899999999, 179.685428, 181.09649300000001, 186.45906199999999, 208.56543400000001,\
                            214.20969400000001, 219.85395500000001, 225.49821499999999, 231.14247499999999,\
                            236.78673499999999, 242.43099599999999, 248.075256, 253.719516, 275.82588800000002,\
                            281.18845700000003, 282.59952199999998, 287.96209099999999, 293.32465999999999, 294.735726,\
                            300.09829500000001, 305.46086400000002, 306.87192900000002, 308.28299399999997,\
                            309.69405999999998, 315.05662899999999, 320.41919799999999, 321.830263, 323.24132800000001,\
                            328.60389700000002, 333.96646600000003],\
                    point = [(0.1058298, 3.3865561500000001, 0.18330270000000001),\
                            (-0.10582994999999999, 3.3865561500000001, 0.18330270000000001),\
                            (0, 4.1625947999999999, 0),\
                            (0.1058298, 3.3865561500000001, 0.18330270000000001),\
                            (0.21165975000000001, 3.3865561500000001, 0),\
                            (0, 4.1625947999999999, 0),\
                            (0.21165975000000001, 3.3865561500000001, 0),\
                            (0.10582994999999999, 3.3865561500000001, -0.18330270000000001),\
                            (0, 4.1625947999999999, 0),\
                            (0.10582994999999999, 3.3865561500000001, -0.18330270000000001),\
                            (-0.1058298, 3.3865561500000001, -0.18330284999999999),\
                            (0, 4.1625947999999999, 0),\
                            (-0.1058298, 3.3865561500000001, -0.18330284999999999),\
                            (-0.21165975000000001, 3.3865561500000001, -3.3622199999999999e-008),\
                            (0, 4.1625947999999999, 0),\
                            (-0.21165975000000001, 3.3865561500000001, -3.3622199999999999e-008),\
                            (-0.10582994999999999, 3.3865561500000001, 0.18330270000000001),\
                            (0, 4.1625947999999999, 0),\
                            (0, 0, 0),\
                            (0, 0, 4.1625947999999999),\
                            (-0.18330270000000001, 0.10582994999999999, 3.3865561500000001),\
                            (0, 0.21165975000000001, 3.3865561500000001),\
                            (0, 0, 4.1625947999999999),\
                            (0.18330270000000001, 0.1058298, 3.3865561500000001),\
                            (0, 0.21165975000000001, 3.3865561500000001),\
                            (0.18330270000000001, 0.1058298, 3.3865561500000001),\
                            (0.18330270000000001, -0.10582994999999999, 3.3865561500000001),\
                            (0, 0, 4.1625947999999999),\
                            (0.18330270000000001, -0.10582994999999999, 3.3865561500000001),\
                            (-3.3622199999999999e-008, -0.21165975000000001, 3.3865561500000001),\
                            (0, 0, 4.1625947999999999),\
                            (-3.3622199999999999e-008, -0.21165975000000001, 3.3865561500000001),\
                            (-0.18330284999999999, -0.1058298, 3.3865561500000001),\
                            (0, 0, 4.1625947999999999),\
                            (-0.18330284999999999, -0.1058298, 3.3865561500000001),\
                            (-0.18330270000000001, 0.10582994999999999, 3.3865561500000001),\
                            (0, 0, 4.1625947999999999),\
                            (0, 0, 0.84663900000000003),\
                            (0, 0.84663900000000003, 0.84663900000000003),\
                            (0, 0.84663900000000003, 0),\
                            (0.84663900000000003, 0.84663900000000003, 0),\
                            (0.84663900000000003, 0, 0),\
                            (0, 0, 0),\
                            (0, 0, 0.84663900000000003),\
                            (0.84663900000000003, 0, 0.84663900000000003),\
                            (0.84663900000000003, 0, 0),\
                            (4.1625947999999999, 0, 0),\
                            (3.3865561500000001, 0.21165975000000001, 0),\
                            (3.3865561500000001, 0.1058298, -0.18330270000000001),\
                            (4.1625947999999999, 0, 0),\
                            (3.3865561500000001, 0.1058298, -0.18330270000000001),\
                            (3.3865561500000001, -0.10582994999999999, -0.18330270000000001),\
                            (4.1625947999999999, 0, 0),\
                            (3.3865561500000001, -0.21165975000000001, 3.3622199999999999e-008),\
                            (3.3865561500000001, -0.10582994999999999, -0.18330270000000001),\
                            (3.3865561500000001, -0.21165975000000001, 3.3622199999999999e-008),\
                            (3.3865561500000001, -0.1058298, 0.18330284999999999),\
                            (4.1625947999999999, 0, 0),\
                            (3.3865561500000001, -0.1058298, 0.18330284999999999),\
                            (3.3865561500000001, 0.10582994999999999, 0.18330270000000001),\
                            (3.3865561500000001, 0.21165975000000001, 0),\
                            (4.1625947999999999, 0, 0),\
                            (3.3865561500000001, 0.10582994999999999, 0.18330270000000001)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def arrowCurve(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\
                    point = [(-2.0857863095420344, -9.3632573363181929e-025, 5.0971193932269898e-009),\
                            (2.0857863095420339, -5.1957367987512135e-016, 2.8284273758870384),\
                            (1.5905961601981407, -4.0800222655138452e-016, 2.2210606728157671),\
                            (1.2229632672818962, -2.8086649577231904e-016, 1.5289659895836587),\
                            (0.99353414115743455, -1.4321487083376504e-016, 0.779625444841058),\
                            (0.91421332817924306, -7.8384805911619546e-025, 4.2670694477831006e-009),\
                            (0.99353414115743632, 1.4321486858069046e-016, -0.77962543257589201),\
                            (1.2229632672818953, 2.8086649447759225e-016, -1.5289659825354958),\
                            (1.590596160198142, 4.0800222361869959e-016, -2.221060656850975),\
                            (2.0857863095420335, 5.1957367987512135e-016, -2.8284273758870384),\
                            (-2.0857863095420344, -9.3632573363181929e-025, 5.0971193932269898e-009)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def circleAround(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,\
                            26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,\
                            51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],\
                    point = [(3.6915440258113947, -9.3629908994031406e-017, 1.5290924543994273),\
                            (2.8282092152668978, -1.731777004387582e-016, 2.8282064765013288),\
                            (1.4141046076334489, -8.6588850219379102e-017, 1.4141032382506644),\
                            (1.8457720129056974, -4.6814954497015703e-017, 0.76454622719971366),\
                            (3.6915440258113947, -9.3629908994031406e-017, 1.5290924543994273),\
                            (3.9996918294590156, 5.4462398553035891e-022, -8.8943846656142078e-006),\
                            (1.9998459147295078, 2.7231199276517946e-022, -4.4471923328071039e-006),\
                            (1.8457720129056974, -4.6814954497015703e-017, 0.76454622719971366),\
                            (1.4141046076334489, -8.6588850219379102e-017, 1.4141032382506644),\
                            (0.76454380079422812, -1.130209927361695e-016, 1.8457728843101386),\
                            (1.5290876015884562, -2.26041985472339e-016, 3.6915457686202773),\
                            (2.8282092152668978, -1.731777004387582e-016, 2.8282064765013288),\
                            (1.4141046076334489, -8.6588850219379102e-017, 1.4141032382506644),\
                            (0.76454380079422812, -1.130209927361695e-016, 1.8457728843101386),\
                            (8.3266726846886741e-017, -1.2245520061760724e-016, 1.9998451913297028),\
                            (1.6653345369377348e-016, -2.4491040123521448e-016, 3.9996903826594057),\
                            (1.5290876015884562, -2.26041985472339e-016, 3.6915457686202773),\
                            (0.76454380079422812, -1.130209927361695e-016, 1.8457728843101386),\
                            (8.3266726846886741e-017, -1.2245520061760724e-016, 1.9998451913297028),\
                            (-0.76454380079422712, -1.130209927361695e-016, 1.8457728843101384),\
                            (-1.5290876015884542, -2.26041985472339e-016, 3.6915457686202768),\
                            (1.6653345369377348e-016, -2.4491040123521448e-016, 3.9996903826594057),\
                            (8.3266726846886741e-017, -1.2245520061760724e-016, 1.9998451913297028),\
                            (-0.76454380079422712, -1.130209927361695e-016, 1.8457728843101384),\
                            (-1.4141046076334489, -8.6588850219379053e-017, 1.414103238250664),\
                            (-2.8282092152668978, -1.7317770043875811e-016, 2.8282064765013279),\
                            (-1.5290876015884542, -2.26041985472339e-016, 3.6915457686202768),\
                            (-0.76454380079422712, -1.130209927361695e-016, 1.8457728843101384),\
                            (-1.4141046076334489, -8.6588850219379053e-017, 1.414103238250664),\
                            (-1.8457720129056985, -4.6814954497015678e-017, 0.76454622719971232),\
                            (-3.691544025811397, -9.3629908994031357e-017, 1.5290924543994246),\
                            (-2.8282092152668978, -1.7317770043875811e-016, 2.8282064765013279),\
                            (-1.4141046076334489, -8.6588850219379053e-017, 1.414103238250664),\
                            (-1.8457720129056985, -4.6814954497015678e-017, 0.76454622719971232),\
                            (-1.9998459147295065, 2.7231199284837963e-022, -4.4471923335287489e-006),\
                            (-3.9996918294590129, 5.4462398569675926e-022, -8.8943846670574978e-006),\
                            (-3.691544025811397, -9.3629908994031357e-017, 1.5290924543994246),\
                            (-1.8457720129056985, -4.6814954497015678e-017, 0.76454622719971232),\
                            (-1.9998459147295065, 2.7231199284837963e-022, -4.4471923335287489e-006),\
                            (-1.8457720129056985, 4.6814304039116263e-017, -0.76453560441606883),\
                            (-3.691544025811397, 9.3628608078232526e-017, -1.5290712088321377),\
                            (-3.9996918294590129, 5.4462398569675926e-022, -8.8943846670574978e-006),\
                            (-1.9998459147295065, 2.7231199284837963e-022, -4.4471923335287489e-006),\
                            (-1.8457720129056985, 4.6814304039116263e-017, -0.76453560441606883),\
                            (-1.414104607633448, 8.658982224938694e-017, -1.4141191127053805),\
                            (-2.8282092152668961, 1.7317964449877388e-016, -2.828238225410761),\
                            (-3.691544025811397, 9.3628608078232526e-017, -1.5290712088321377),\
                            (-1.8457720129056985, 4.6814304039116263e-017, -0.76453560441606883),\
                            (-1.414104607633448, 8.658982224938694e-017, -1.4141191127053805),\
                            (-0.76454380079422712, 1.1301958153051444e-016, -1.8457498375728087),\
                            (-1.5290876015884542, 2.2603916306102888e-016, -3.6914996751456175),\
                            (-2.8282092152668961, 1.7317964449877388e-016, -2.828238225410761),\
                            (-1.414104607633448, 8.658982224938694e-017, -1.4141191127053805),\
                            (-0.76454380079422712, 1.1301958153051444e-016, -1.8457498375728087),\
                            (-2.7755575615628914e-017, 1.2246467991473535e-016, -2.0000000000000009),\
                            (-5.5511151231257827e-017, 2.4492935982947069e-016, -4.0000000000000018),\
                            (-1.5290876015884542, 2.2603916306102888e-016, -3.6914996751456175),\
                            (-0.76454380079422712, 1.1301958153051444e-016, -1.8457498375728087),\
                            (-2.7755575615628914e-017, 1.2246467991473535e-016, -2.0000000000000009),\
                            (0.76454380079422657, 1.1301958153051444e-016, -1.845749837572809),\
                            (1.5290876015884531, 2.2603916306102888e-016, -3.6914996751456179),\
                            (-5.5511151231257827e-017, 2.4492935982947069e-016, -4.0000000000000018),\
                            (-2.7755575615628914e-017, 1.2246467991473535e-016, -2.0000000000000009),\
                            (0.76454380079422657, 1.1301958153051444e-016, -1.845749837572809),\
                            (1.4141046076334503, 8.6589822249386927e-017, -1.4141191127053805),\
                            (2.8282092152669005, 1.7317964449877385e-016, -2.828238225410761),\
                            (1.5290876015884531, 2.2603916306102888e-016, -3.6914996751456179),\
                            (0.76454380079422657, 1.1301958153051444e-016, -1.845749837572809),\
                            (1.4141046076334503, 8.6589822249386927e-017, -1.4141191127053805),\
                            (1.8457720129056994, 4.681430403911622e-017, -0.76453560441606694),\
                            (3.6915440258113987, 9.3628608078232439e-017, -1.5290712088321339),\
                            (2.8282092152669005, 1.7317964449877385e-016, -2.828238225410761),\
                            (1.4141046076334503, 8.6589822249386927e-017, -1.4141191127053805),\
                            (1.8457720129056994, 4.681430403911622e-017, -0.76453560441606694),\
                            (1.9998459147295078, 2.7231199276517946e-022, -4.4471923328071039e-006),\
                            (3.9996918294590156, 5.4462398553035891e-022, -8.8943846656142078e-006),\
                            (3.6915440258113987, 9.3628608078232439e-017, -1.5290712088321339)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def wardCtrl(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)     
        curve=cmds.curve( name=obj+"_Ctrl",degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6, 7],\
                    point = [(0, 0, 0),\
                            (5.3290705182007522e-016, 2.4000000000000004, -2.4000000000000004),\
                            (5.3290705182007522e-016, 2.4000000000000004, -1.6000000000000001),\
                            (1.0658141036401504e-015, 4.8000000000000007, -1.6000000000000001),\
                            (1.0658141036401504e-015, 4.8000000000000007, 1.6000000000000001),\
                            (5.3290705182007522e-016, 2.4000000000000004, 1.6000000000000001),\
                            (5.3290705182007522e-016, 2.4000000000000004, 2.4000000000000004),\
                            (0, 0, 0)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def EyeCtrl(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)  
        group = cmds.group(empty=True, name = "Eye_Ctrl_Grp" ) 
        cmds.xform(group, worldSpace=True, translation=pivot_position)
        eyesCtrl = cmds.curve(name="Eye_Main_Ctrl", degree = 3,\
                                knot = [-0.125, -0.0625, 0, 0.0625, 0.125, 0.1875, 0.25, 0.3125, 0.375, 0.4375,\
                                        0.5, 0.5625, 0.625, 0.68749999999999989, 0.75, 0.8125, 0.875, 0.9375, 1, 1.0625, 1.125],\
                                point = [(5.4667766244599386e-016, -1.4704200208281852, -3.5957931707434332),\
                                        (2.3901680489201403e-016, -8.4984610036314788e-016, -3.9034406501274796),\
                                        (-1.0632000275130833e-016, 1.4704200208281888, -3.5957931707434332),\
                                        (-3.208896543184324e-016, 2.2062370182034488, -2.7598712196396766),\
                                        (-3.023093244110717e-016, 1.772223014694893, -1.4894618560943953),\
                                        (-2.9435037134086058e-016, 1.3256450402002948, -3.1974627171973714e-005),\
                                        (-4.847409168528897e-016, 1.7723148725901197, 1.4895390447165942),\
                                        (-6.5886200110549474e-016, 2.206206278008942, 2.7597475425490887),\
                                        (-5.4669711720006189e-016, 1.4704424162615588, 3.5960296792440474),\
                                        (-2.3898254157271632e-016, 3.0205530167176254e-016, 3.902881087658999),\
                                        (1.0631049356755134e-016, -1.4704424162615617, 3.5960296792440483),\
                                        (3.2089040166174368e-016, -2.2062062780089424, 2.75974754254909),\
                                        (3.0232499452117143e-016, -1.772314872590121, 1.4895390447165948),\
                                        (2.9435428710334364e-016, -1.3256450402002999, -3.1974627170503149e-005),\
                                        (4.8471579386287967e-016, -1.7722230146948952, -1.4894618560943897),\
                                        (6.5887639983749675e-016, -2.2062370182034554, -2.759871219639678),\
                                        (5.4667766244599386e-016, -1.4704200208281852, -3.5957931707434332),\
                                        (2.3901680489201403e-016, -8.4984610036314788e-016, -3.9034406501274796),\
                                        (-1.0632000275130833e-016, 1.4704200208281888, -3.5957931707434332)]\
                            )
        leftEyeCtrl = cmds.curve(name=obj+"Eye_L_Ctrl", degree = 3,\
                                knot = [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\
                                point = [(3.1077074990292601e-016, -1.0970562748477151, -3.0970562748477133),\
                                        (9.5000252523552743e-017, 1.7700438850961058e-016, -3.5514718625761432),\
                                        (-1.764201043552486e-016, 1.097056274847714, -3.0970562748477137),\
                                        (-3.4449595677802209e-016, 1.551471862576143, -2.0000000000000004),\
                                        (-3.1077074990292582e-016, 1.0970562748477142, -0.90294372515228649),\
                                        (-9.5000252523552904e-017, 4.6748875090267269e-016, -0.44852813742385678),\
                                        (1.7642010435524845e-016, -1.0970562748477133, -0.90294372515228605),\
                                        (3.4449595677802209e-016, -1.551471862576143, -1.9999999999999991),\
                                        (3.1077074990292601e-016, -1.0970562748477151, -3.0970562748477133),\
                                        (9.5000252523552743e-017, 1.7700438850961058e-016, -3.5514718625761432),\
                                        (-1.764201043552486e-016, 1.097056274847714, -3.0970562748477137)]\
                            )

        rightEyeCtrl = cmds.curve(name=obj+"Eye_R_Ctrl", degree = 3,\
                                knot = [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\
                                point = [(3.1077074990292601e-016, -1.0970562748477151, 0.90294372515228671),\
                                        (9.5000252523552743e-017, 1.7700438850961058e-016, 0.448528137423857),\
                                        (-1.764201043552486e-016, 1.097056274847714, 0.90294372515228605),\
                                        (-3.4449595677802209e-016, 1.551471862576143, 1.9999999999999996),\
                                        (-3.1077074990292582e-016, 1.0970562748477142, 3.0970562748477137),\
                                        (-9.5000252523552904e-017, 4.6748875090267269e-016, 3.5514718625761432),\
                                        (1.7642010435524845e-016, -1.0970562748477133, 3.0970562748477137),\
                                        (3.4449595677802209e-016, -1.551471862576143, 2.0000000000000009),\
                                        (3.1077074990292601e-016, -1.0970562748477151, 0.90294372515228671),\
                                        (9.5000252523552743e-017, 1.7700438850961058e-016, 0.448528137423857),\
                                        (-1.764201043552486e-016, 1.097056274847714, 0.90294372515228605)]\
                            )
        cmds.xform(eyesCtrl, worldSpace=True, translation=pivot_position)
        cmds.xform(leftEyeCtrl, worldSpace=True, translation=pivot_position)
        cmds.xform(rightEyeCtrl, worldSpace=True, translation=pivot_position)

        cmds.parent(eyesCtrl, group)
        cmds.parent(leftEyeCtrl, eyesCtrl)
        cmds.parent(rightEyeCtrl, eyesCtrl)
        cmds.select(eyesCtrl, replace = 1)

def fourAround(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\
                            21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
                            41, 42, 43, 44, 45, 46, 47, 48],\
                    point = [(-3.1365431247355415, -3.819023300387824e-017, 0.623693836140637),\
                            (-4, 0, 0.80000000000000004),\
                            (-4, 0, 1.6000000000000001),\
                            (-5.6000000000000005, 0, 0),\
                            (-4, 0, -1.6000000000000001),\
                            (-4, 0, -0.80000000000000004),\
                            (-3.1365342751582044, 3.8192692435327155e-017, -0.62373400170430104),\
                            (-2.9532115201439462, 7.4904857374240085e-017, -1.223289154495677),\
                            (-2.6588921488091724, 1.0880178124855442e-016, -1.7768679316241476),\
                            (-2.2625592428733143, 1.3854423128474127e-016, -2.2625990021155689),\
                            (-1.776794143541462, 1.6281013397300349e-016, -2.6588912670389244),\
                            (-1.2232143185648301, 1.808320895540634e-016, -2.9532121372458668),\
                            (-0.62370040326238529, 1.9206572749663177e-016, -3.1366713672930926),\
                            (-0.80000000000000004, 0, -4),\
                            (-1.6000000000000001, 0, -4),\
                            (0, 0, -5.6000000000000005),\
                            (1.6000000000000001, 0, -4),\
                            (0.80000000000000004, 0, -4),\
                            (0.62370040326238407, 1.9206572749663185e-016, -3.1366713672930926),\
                            (1.2232143185648312, 1.808320895540634e-016, -2.9532121372458664),\
                            (1.7767941435414629, 1.6281013397300349e-016, -2.6588912670389258),\
                            (2.2625592428733148, 1.3854423128474151e-016, -2.2625990021155715),\
                            (2.6588921488091737, 1.0880178124855452e-016, -1.7768679316241494),\
                            (2.9532115201439439, 7.4904857374240603e-017, -1.223289154495683),\
                            (3.136534275158203, 3.8192692435327482e-017, -0.62373400170430693),\
                            (4, 0, -0.80000000000000004),\
                            (4, 0, -1.6000000000000001),\
                            (5.6000000000000005, 0, 0),\
                            (4, 0, 1.6000000000000001),\
                            (4, 0, 0.80000000000000004),\
                            (3.136543124735546, -3.8190233003877864e-017, 0.62369383614062934),\
                            (2.9532336400027384, -7.490263320801017e-017, 1.2232528311046151),\
                            (2.6589082661209607, -1.0879935973282562e-016, 1.7768283852711821),\
                            (2.2625737811483626, -1.3854177878362525e-016, 2.2625589497328309),\
                            (1.776844236468518, -1.6281034758848543e-016, 2.6588947556444888),\
                            (1.2232715976872581, -1.8083291678879909e-016, 2.9532256470143374),\
                            (0.62371425969669825, -1.9205771067676957e-016, 3.1365404426890713),\
                            (0.80000000000000004, 0, 4),\
                            (1.6000000000000001, 0, 4),\
                            (0, 0, 5.6000000000000005),\
                            (-1.6000000000000001, 0, 4),\
                            (-0.80000000000000004, 0, 4),\
                            (-0.62371425969669225, -1.9205771067676969e-016, 3.1365404426890731),\
                            (-1.2232715976872506, -1.8083291678879911e-016, 2.9532256470143396),\
                            (-1.7768442364685115, -1.628103475884856e-016, 2.6588947556444924),\
                            (-2.2625737811483595, -1.3854177878362547e-016, 2.2625589497328336),\
                            (-2.6589082661209544, -1.0879935973282614e-016, 1.7768283852711904),\
                            (-2.9532336400027375, -7.4902633208010762e-017, 1.223252831104622),\
                            (-3.1365431247355415, -3.819023300387824e-017, 0.623693836140637)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def ccButton40(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)     
        curve=cmds.curve(name=obj+"_Ctrl", degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
                            16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\
                    point = [(0, 0, 0),\
                            (6.8580220752251786e-016, 5.6000000000000005, 0),\
                            (0.20683760000000073, 5.6279536000000006, 0),\
                            (0.39966240000000075, 5.7078255999999996, 0),\
                            (0.56568960000000068, 5.8343100000000003, 0),\
                            (0.69217500000000076, 6.0003378000000005, 0),\
                            (0.77204560000000089, 6.1931621999999997, 0),\
                            (0.80000600000000066, 6.4000000461260003, 0),\
                            (0, 6.4000000000000004, 0),\
                            (6.8580220752251786e-016, 5.6000000000000005, 0),\
                            (-0.20683759999999932, 5.6279536000000006, 0),\
                            (-0.39966239999999931, 5.7078256000000005, 0),\
                            (-0.56568959999999924, 5.8343100000000003, 0),\
                            (-0.69217499999999932, 6.0003378000000005, 0),\
                            (-0.77204559999999933, 6.1931622000000006, 0),\
                            (-0.80000599999999933, 6.4000000461260003, 0),\
                            (-0.77204559999999933, 6.6068376000000004, 0),\
                            (-0.69217499999999921, 6.7996623999999999, 0),\
                            (-0.56568959999999913, 6.965689600000001, 0),\
                            (-0.39966239999999914, 7.092175000000001, 0),\
                            (-0.20683759999999915, 7.1720456000000006, 0),\
                            (8.8174643017417381e-016, 7.200006000000001, 0),\
                            (0.20683760000000093, 7.1720456000000006, 0),\
                            (0.39966240000000092, 7.092175000000001, 0),\
                            (0.5656896000000009, 6.965689600000001, 0),\
                            (0.69217500000000098, 6.7996623999999999, 0),\
                            (0.77204560000000089, 6.6068376000000004, 0),\
                            (0.80000600000000066, 6.4000000461260003, 0),\
                            (-0.80000599999999933, 6.4000000461260003, 0),\
                            (0, 6.4000000000000004, 0),\
                            (8.8174643017417381e-016, 7.200006000000001, 0)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)
        

def ccButton43(self):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)     
        curve=cmds.curve( name=obj+"_Ctrl",degree = 1,\
                    knot = [0, 1, 2, 3, 4, 5, 6],\
                    point = [(0, 0, 0),\
                            (-2.7610131682735411e-031, 5.5999999999999996, -1.2434497875801752e-015),\
                            (-0.69999999999999996, 5.5999999999999996, -1.0880185641326533e-015),\
                            (-0.69999999999999996, 7, -1.3988810110276972e-015),\
                            (0.69999999999999996, 7, -1.7097434579227411e-015),\
                            (0.69999999999999996, 5.5999999999999996, -1.3988810110276972e-015),\
                            (-2.7610131682735411e-031, 5.5999999999999996, -1.2434497875801752e-015)]\
                )
        cmds.xform(curve, worldSpace=True, translation=pivot_position)

def squareCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve_points = [(1, 0, -1), (-1, 0, -1), (-1, 0, 1), (1, 0, 1), (1, 0, -1)]
        curve_degree = 1 

        curve_name = cmds.curve(name= obj + "_Ctrl", d=curve_degree, p=curve_points) 
        cmds.xform(curve_name, worldSpace=True, translation=pivot_position)
def functionsCurve(*arg):
    selected_attributes = cmds.channelBox("mainChannelBox", query=True, selectedMainAttributes=True)
    groupMain = cmds.group(name="Main_Functions", empty=True)
    Main_Functions = cmds.curve(name="Main_Functions",d=1, p=[(3, 0, -3), (-3, 0, -3), (-3, 0, 3), (3, 0, 3), (3, 0, -3)])
    cmds.transformLimits(Main_Functions, tx=(0, 0), ty=(0, 0), tz=(0, 0), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Main_Functions, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Main_Functions), True)
    cmds.setAttr("{0}.overrideColor".format(Main_Functions), ColorCurve1)  
    cmds.parent(Main_Functions, groupMain)

    Line_grp = cmds.group(name="LineGrp", empty=True)
    cmds.parent(Line_grp, Main_Functions)
    Ctrl_Grp = cmds.group(name="Ctrl_Func_Grp", empty=True)
    cmds.parent(Ctrl_Grp, Line_grp)
    Line1 = cmds.curve(name="Line1",d=3, p=[(-2, 0, -1.99), (-0.67, 0, -1.99), (0.67, 0, -1.99), (2, 0, -1.99)])
    cmds.transformLimits(Line1, tx=(0, 0), ty=(0, 0), tz=(0, 0), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Line1, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line1), True)
    cmds.setAttr("{0}.overrideColor".format(Line1), 13)  
    cmds.parent(Line1, Line_grp)

    Line2 = cmds.curve(name="Line2",d=3, p=[(-2, 0, 0), (-0.67, 0, 0), (0.67, 0, 0), (2, 0, 0)])
    cmds.transformLimits(Line2, tx=(0, 0), ty=(0, 0), tz=(0, 0), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Line2, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line2), True)
    cmds.setAttr("{0}.overrideColor".format(Line2), 13)  
    cmds.parent(Line2, Line_grp)

    Line3 = cmds.curve(name="Line3",d=3, p=[(-2, 0, 2), (-0.67, 0, 2), (0.67, 0, 2), (2, 0, 2)])
    cmds.transformLimits(Line3, tx=(0, 0), ty=(0, 0), tz=(0, 0), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Line3, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line3), True)
    cmds.setAttr("{0}.overrideColor".format(Line3), 13)  
    cmds.parent(Line3, Line_grp)

    Func_grp_1 = cmds.group(name="Func_2_grp", empty=True)
    Func1 = cmds.curve(name="Functions_2",d=3, p=[(-1.58, 0, -0.43), (-2.01, 0, -0.61), (-2.44, 0, -0.43), (-2.62, 0, 0),
                            (-2.44, 0, 0.43), (-2.01, 0, 0.61), (-1.58, 0, 0.43), (-1.41, 0, 0), 
                            (-1.41, 0, 0), (-1.41, 0, 0), (-1.41, 0, 0), (-1.41, 0, 0)])

    cmds.transformLimits(Func1, tx=(0, 3.4), ty=(0, 0), tz=(0, 0), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func1, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Func1), True)
    cmds.setAttr("{0}.overrideColor".format(Func1), 17)  

    cmds.parent(Func1, Func_grp_1)
    cmds.CenterPivot()

    Func_grp_2 = cmds.group(name="Func_1_grp", empty=True)
    Func2 = cmds.curve(name="Functions_1", d=3, p=[(-1.58, 0, -2.42), (-2.01, 0, -2.6), (-2.44, 0, -2.42), (-2.62, 0, -1.99),
                            (-2.44, 0, -1.56), (-2.01, 0, -1.39), (-1.58, 0, -1.56), (-1.41, 0, -1.99),
                            (-1.41, 0, -1.99), (-1.41, 0, -1.99), (-1.41, 0, -1.99), (-1.41, 0, -1.99)])

    cmds.transformLimits(Func2, tx=(0, 3.4), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func2, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Func2), True)
    cmds.setAttr("{0}.overrideColor".format(Func2), 17)   
    cmds.parent(Func2, Func_grp_2)
    cmds.CenterPivot()

    Func_grp_3 = cmds.group(name="Func_3_grp", empty=True)
    Func3 = cmds.curve(name="Functions_3", d=3, p=[(-1.58, 0, 1.57), (-2.01, 0, 1.39), (-2.44, 0, 1.57), (-2.62, 0, 2),
                            (-2.44, 0, 2.43), (-2.01, 0, 2.61), (-1.58, 0, 2.43), (-1.41, 0, 2),
                            (-1.41, 0, 2), (-1.41, 0, 2), (-1.41, 0, 2), (-1.41, 0, 2)])
    cmds.transformLimits(Func3, tx=(0, 3.4), ty=(0, 0), tz=(0, 0), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func3, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Func3), True)
    cmds.setAttr("{0}.overrideColor".format(Func3), 17)  
    cmds.parent(Func3, Func_grp_3)
    cmds.CenterPivot()



    cmds.parent(Func_grp_1, Ctrl_Grp)
    cmds.parent(Func_grp_2, Ctrl_Grp)
    cmds.parent(Func_grp_3, Ctrl_Grp)
    cmds.parent(Ctrl_Grp, Main_Functions)

    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.tz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_2.v";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.tz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_3.v";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.tz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Functions_1.v";')


def squareCurve(*arg):
    selecteds = cmds.ls(sl=True)
    for obj in selecteds:
        pivot_position = cmds.xform(selecteds, query=True, worldSpace=True, rotatePivot=True)      
        curve_points = [(1, 0, -1), (-1, 0, -1), (-1, 0, 1), (1, 0, 1), (1, 0, -1)]
        curve_degree = 1 

        curve_name = cmds.curve(name= obj + "_Ctrl", d=curve_degree, p=curve_points) 
        cmds.xform(curve_name, worldSpace=True, translation=pivot_position)

def faceCurve(*arg):
    groupMain = cmds.group(name="Main_Face_Grp_dont_FreezeTransformations", empty=True)
    Main_Functions = cmds.curve(name="Main_Face",d=1, p=[
        (-0.43, 0, -0.86),
        (0.43, 0, -0.86),
        (0.43, 0, 0.71),
        (-0.43, 0, 0.71),
        (-0.43, 0, -0.86)])
        
    mel.eval('setAttr -lock true -keyable false -channelBox false "Main_Face.v";')
    Functions = cmds.curve(name="LineFunction",d=1, p=[        
        (-0.4, 0, 0.45),
        (0.4, 0, 0.45),
        (0.4, 0, 0.68),
        (-0.4, 0, 0.68),
        (-0.4, 0, 0.45)])
    mel.eval("""
curve -d 2 -p -0.08 0 0.65 -p -0.08 0 0.56 -p -0.08 0 0.48 -p -0.06 0 0.48 -p -0.05 0 0.48 -p -0.03 0 0.54 -p -0.01 0 0.6 -p 0 0 0.62 -p 0 0 0.62 -p 0.01 0 0.61 -p 0.01 0 0.6 -p 0.03 0 0.54 -p 0.05 0 0.48 -p 0.07 0 0.48 -p 0.08 0 0.48 -p 0.08 0 0.56 -p 0.08 0 0.65 -p 0.07 0 0.65 -p 0.06 0 0.65 -p 0.06 0 0.58 -p 0.06 0 0.51 -p 0.04 0 0.58 -p 0.01 0 0.65 -p 0 0 0.65 -p -0.01 0 0.65 -p -0.03 0 0.58 -p -0.06 0 0.5 -p -0.06 0 0.58 -p -0.06 0 0.65 -p -0.07 0 0.65 -p -0.08 0 0.65;
                          """)    
    mel.eval("""    
    select -r LineFunction ;
    setAttr "curveShape2.template" 1;
             """)
    cmds.parent(Functions, Main_Functions)
    cmds.listRelatives(Main_Functions, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Main_Functions), True)
    cmds.setAttr("{0}.overrideColor".format(Main_Functions), ColorCurve2)  
    cmds.parent(Main_Functions, groupMain)

    Ctrl_grp = cmds.group(name="Ctrl_Grp", empty=True)
    cmds.parent(Ctrl_grp, Main_Functions)
    Line_grp = cmds.group(name="Line_grp", empty=True)
    cmds.parent(Line_grp, Main_Functions)
    Line2 = cmds.curve(name="Line2",d=1, p=[(-0.14, 0, -0.14),
        (0.14, 0, -0.14),
        (0.14, 0, 0.14),
        (-0.14, 0, 0.14),
        (-0.14, 0, -0.14)])
    gr4 = cmds.group(n="BR", empty=True)
    Func4 = cmds.curve(name="Bow_Ctrl_R", d=1, p=[        
        (0, 0, -0.36),(0.12, 0, -0.36),
        (0.24, 0, -0.24),(0.36, 0, -0.12),(0.36, 0, 0),(0.36, 0, 0.12),(0.24, 0, 0.24),
        (0.12, 0, 0.36),(0, 0, 0.36),(-0.12, 0, 0.36),(-0.24, 0, 0.24),(-0.36, 0, 0.12),
        (-0.36, 0, 0),(-0.36, 0, -0.12),(-0.24, 0, -0.24),(-0.12, 0, -0.36),(0, 0, -0.36)])
    cmds.parent(Func4, gr4)
    cmds.parent(gr4, Line2) 
    mel.eval("""
    setAttr "BR.scaleZ" 0.140;
    setAttr "BR.scaleX" 0.140;
    setAttr "BR.scaleY" 0.140;
             """)   
             
    cmds.parent(Line2, Line_grp)     
    mel.eval("""
    setAttr "Line2.translateX" -0.216;
    setAttr "Line2.translateZ" -0.646;

    select -r Line2 ;
    setAttr "curveShape4.template" 1;

             """)
    cmds.listRelatives(Line2, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line2), True)
    cmds.setAttr("{0}.overrideColor".format(Line2), ColorCurve1)  

    Line3 = cmds.curve(name="Line3",d=1, p=[(-0.14, 0, -0.14),
        (0.14, 0, -0.14),
        (0.14, 0, 0.14),
        (-0.14, 0, 0.14),
        (-0.14, 0, -0.14)])
    gr3 = cmds.group(n="BL", empty=True)
    Func3 = cmds.curve(name="Bow_Ctrl_L", d=1, p=[        
        (0, 0, -0.36),(0.12, 0, -0.36),
        (0.24, 0, -0.24),(0.36, 0, -0.12),(0.36, 0, 0),(0.36, 0, 0.12),(0.24, 0, 0.24),
        (0.12, 0, 0.36),(0, 0, 0.36),(-0.12, 0, 0.36),(-0.24, 0, 0.24),(-0.36, 0, 0.12),
        (-0.36, 0, 0),(-0.36, 0, -0.12),(-0.24, 0, -0.24),(-0.12, 0, -0.36),(0, 0, -0.36)])
    cmds.parent(Func3, gr3)
    cmds.parent(gr3, Line3) 
    mel.eval("""
    setAttr "BL.scaleZ" 0.140;
    setAttr "BL.scaleX" 0.140;
    setAttr "BL.scaleY" 0.140;
             """)  
    
    cmds.parent(Line3, Line_grp)        
    mel.eval("""
    setAttr "Line3.translateX" 0.216;
    setAttr "Line3.translateZ" -0.646;
    setAttr -lock true -keyable false -channelBox false "Line3.v";    
    select -r Line3 ;
    setAttr "curveShape6.template" 1;

             """)
    cmds.listRelatives(Line3, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line3), True)
    cmds.setAttr("{0}.overrideColor".format(Line3), ColorCurve1)  

 
    
    Line4 = cmds.curve(name="Line4",d=1, p=[(-0.14, 0, -0.14),
        (0.14, 0, -0.14),
        (0.14, 0, 0.14),
        (-0.14, 0, 0.14),
        (-0.14, 0, -0.14)])
    gr1 = cmds.group(n="ER", empty=True)
    Func1 = cmds.curve(name="Eye_Ctrl_R", d=1, p=[        
        (0, 0, -0.36),(0.12, 0, -0.36),
        (0.24, 0, -0.24),(0.36, 0, -0.12),(0.36, 0, 0),(0.36, 0, 0.12),(0.24, 0, 0.24),
        (0.12, 0, 0.36),(0, 0, 0.36),(-0.12, 0, 0.36),(-0.24, 0, 0.24),(-0.36, 0, 0.12),
        (-0.36, 0, 0),(-0.36, 0, -0.12),(-0.24, 0, -0.24),(-0.12, 0, -0.36),(0, 0, -0.36)])
    cmds.parent(Func1, gr1)
    cmds.parent(gr1, Line4) 
    mel.eval("""
    setAttr "ER.scaleZ" 0.140;
    setAttr "ER.scaleX" 0.140;
    setAttr "ER.scaleY" 0.140;
             """)   
             
    cmds.parent(Line4, Line_grp)    
    mel.eval("""
    setAttr "Line4.translateX" -0.216;
    setAttr "Line4.translateZ" -0.264;
    setAttr -lock true -keyable false -channelBox false "Line4.v";
    select -r Line4 ;
    setAttr "curveShape8.template" 1;

             """)
    cmds.listRelatives(Line4, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line4), True)
    cmds.setAttr("{0}.overrideColor".format(Line4), ColorCurve1)  

    Line5 = cmds.curve(name="Line5",d=1, p=[(-0.14, 0, -0.14),
        (0.14, 0, -0.14),
        (0.14, 0, 0.14),
        (-0.14, 0, 0.14),
        (-0.14, 0, -0.14)])
    gr2 = cmds.group(n="EL", empty=True)
    Func2 = cmds.curve(name="Eye_Ctrl_L", d=1, p=[        
        (0, 0, -0.36),(0.12, 0, -0.36),
        (0.24, 0, -0.24),(0.36, 0, -0.12),(0.36, 0, 0),(0.36, 0, 0.12),(0.24, 0, 0.24),
        (0.12, 0, 0.36),(0, 0, 0.36),(-0.12, 0, 0.36),(-0.24, 0, 0.24),(-0.36, 0, 0.12),
        (-0.36, 0, 0),(-0.36, 0, -0.12),(-0.24, 0, -0.24),(-0.12, 0, -0.36),(0, 0, -0.36)])
    cmds.parent(Func2, gr2)
    cmds.parent(gr2, Line5) 
    mel.eval("""
    setAttr "EL.scaleZ" 0.140;
    setAttr "EL.scaleX" 0.140;
    setAttr "EL.scaleY" 0.140;
             """)   
    cmds.parent(Line5, Line_grp)    
    mel.eval("""
    setAttr "Line5.translateX" 0.216;
    setAttr "Line5.translateZ" -0.264;
    setAttr -lock true -keyable false -channelBox false "Line5.v";
    select -r Line5 ;
    setAttr "curveShape10.template" 1;

             """)
    cmds.listRelatives(Line5, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line5), True)
    cmds.setAttr("{0}.overrideColor".format(Line5), ColorCurve1)  


    Line6 = cmds.curve(name="Line6",d=1, p=[(-0.14, 0, -0.14),
        (0.14, 0, -0.14),
        (0.14, 0, 0.14),
        (-0.14, 0, 0.14),
        (-0.14, 0, -0.14)])
    gr5 = cmds.group(n="MM", empty=True)
    Func5 = cmds.curve(name="Mouth", d=1, p=[        
        (0, 0, -0.36),(0.12, 0, -0.36),
        (0.24, 0, -0.24),(0.36, 0, -0.12),(0.36, 0, 0),(0.36, 0, 0.12),(0.24, 0, 0.24),
        (0.12, 0, 0.36),(0, 0, 0.36),(-0.12, 0, 0.36),(-0.24, 0, 0.24),(-0.36, 0, 0.12),
        (-0.36, 0, 0),(-0.36, 0, -0.12),(-0.24, 0, -0.24),(-0.12, 0, -0.36),(0, 0, -0.36)])
    cmds.parent(Func5, gr5) 
    cmds.parent(Line6, Line_grp)     
    mel.eval("""
    setAttr "Line6.scaleZ" 1.5;
    setAttr "Line6.scaleX" 1.5;
    setAttr "Line6.scaleY" 1.5;
    setAttr "Line6.translateZ" 0.20;
    select -r Line6 ;
    setAttr "curveShape12.template" 1;

             """)
    cmds.listRelatives(Line6, shapes=True)
    cmds.setAttr("{0}.overrideEnabled".format(Line6), True)
    cmds.setAttr("{0}.overrideColor".format(Line6), ColorCurve1)  
    cmds.parent(gr5, Line6) 
    mel.eval("""
    setAttr "MM.scaleZ" 0.140;
    setAttr "MM.scaleX" 0.140;
    setAttr "MM.scaleY" 0.140;
    setAttr "MM.translateZ" -0.14;
    
             """)  


    mel.eval("""
    setAttr -keyable false -channelBox true "Main_Face.tx";
    setAttr -keyable false -channelBox true "Main_Face.ty";
    setAttr -keyable false -channelBox true "Main_Face.tz";
    setAttr -keyable false -channelBox true "Main_Face.rx";
    setAttr -keyable false -channelBox true "Main_Face.ry";
    setAttr -keyable false -channelBox true "Main_Face.rz";
    setAttr -keyable false -channelBox true "Main_Face.sx";
    setAttr -keyable false -channelBox true "Main_Face.sy";
    setAttr -keyable false -channelBox true "Main_Face.sz";
             """)
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_R.v";')
    cmds.transformLimits(Func4, tx=(-1, 1), ty=(0, 0), tz=(-1, 1), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func4, shapes=True)
    cmds.addAttr(Func4, longName='______________________', attributeType='enum', en='____________', keyable=True)
    mel.eval('setAttr -lock true "Bow_Ctrl_R.______________________";')
    # cmds.addAttr(Func4, longName = 'Blink', attributeType = 'float', min = 0, max = 10, keyable=True) 
    # cmds.addAttr(Func4, longName = 'Iris', attributeType = 'float', min = 0, max = 10, keyable=True) 
    # cmds.addAttr(Func4, longName = 'Pupil', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.setAttr("{0}.overrideEnabled".format(Func4), True)
    cmds.setAttr("{0}.overrideColor".format(Func4), ColorCurve3) 

    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Bow_Ctrl_L.v";')
    cmds.transformLimits(Func3, tx=(-1, 1), ty=(0, 0), tz=(-1, 1), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func3, shapes=True)
    cmds.addAttr(Func3, longName='______________________', attributeType='enum', en='____________', keyable=True)
    mel.eval('setAttr -lock true "Bow_Ctrl_L.______________________";')
    # cmds.addAttr(Func3, longName = 'Blink', attributeType = 'float', min = 0, max = 10, keyable=True) 
    # cmds.addAttr(Func3, longName = 'Iris', attributeType = 'float', min = 0, max = 10, keyable=True) 
    # cmds.addAttr(Func3, longName = 'Pupil', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.setAttr("{0}.overrideEnabled".format(Func3), True)
    cmds.setAttr("{0}.overrideColor".format(Func3), ColorCurve3) 

    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_R.v";')
    cmds.transformLimits(Func1, tx=(-1, 1), ty=(0, 0), tz=(-1, 1), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func1, shapes=True)
    cmds.addAttr(Func1, longName='______________________', attributeType='enum', en='____________', keyable=True)
    mel.eval('setAttr -lock true "Eye_Ctrl_R.______________________";')
    cmds.addAttr(Func1, longName = 'Blink', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.addAttr(Func1, longName = 'Iris', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.addAttr(Func1, longName = 'Pupil', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.setAttr("{0}.overrideEnabled".format(Func1), True)
    cmds.setAttr("{0}.overrideColor".format(Func1), ColorCurve3) 

    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Eye_Ctrl_L.v";')
    cmds.transformLimits(Func2, tx=(-1, 1), ty=(0, 0), tz=(-1, 1), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func2, shapes=True)
    cmds.addAttr(Func2, longName='______________________', attributeType='enum', en='____________', keyable=True)
    mel.eval('setAttr -lock true "Eye_Ctrl_L.______________________";')
    cmds.addAttr(Func2, longName = 'Blink', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.addAttr(Func2, longName = 'Iris', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.addAttr(Func2, longName = 'Pupil', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.setAttr("{0}.overrideEnabled".format(Func2), True)
    cmds.setAttr("{0}.overrideColor".format(Func2), ColorCurve3) 

    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.ty";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.sz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.sx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.sy";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.ry";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.rx";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.rz";')
    mel.eval('setAttr -lock true -keyable false -channelBox false "Mouth.v";')
    cmds.transformLimits(Func5, tx=(-1, 1), ty=(0, 0), tz=(0, 2), rx=(0, 0), ry=(0, 0), rz=(0, 0), sx=(1, 1), sy=(1, 1), sz=(1, 1), etx=(True, True), ety=(True, True), etz=(True, True))
    cmds.listRelatives(Func5, shapes=True)
    cmds.addAttr(Func5, longName='______________________', attributeType='enum', en='____________', keyable=True)
    mel.eval('setAttr -lock true "Mouth.______________________";')
    cmds.addAttr(Func5, longName = 'Happy', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.addAttr(Func5, longName = 'Wow', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.addAttr(Func5, longName = 'Angry', attributeType = 'float', min = 0, max = 10, keyable=True) 
    cmds.setAttr("{0}.overrideEnabled".format(Func5), True)
    cmds.setAttr("{0}.overrideColor".format(Func5), ColorCurve3)     

    mel.eval("""
    rename "curve1" "Mouth_Function";
    """)
    cmds.parent("Mouth_Function", "LineFunction")
    mel.eval('select -cl ;')    

    ##### Eye_Ctrl_R

    ##### Eye_Ctrl_L

    #####     

def combineShapes(*arg):
    selObj = cmds.ls(selection = 1)
    cmds.makeIdentity(apply = 1, translate = 1, rotate = 1, scale = 1, normal = 0)
    cmds.delete(constructionHistory = 1)
    objShape = cmds.listRelatives(selObj, shapes = 1)
    
    for i in range(len(objShape)-1):
        cmds.parent(objShape[i],selObj[-1],add = 1, shape = 1)
        cmds.delete(selObj[i])
        cmds.select(selObj[-1], replace = 1) 









