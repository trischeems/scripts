import maya.cmds as cmds
import pymel.core as pm
import os
################################################################ import os
IMAGE_PATH = os.path.join(os.path.dirname(__file__), 'Icons')


import tools_Tri3D.Funtions.Tri3D_functions as func
reload(func)
import tools_Tri3D.Funtions.Rigging.Tri3D_rigFunctions as Rig
reload(Rig)
import tools_Tri3D.Funtions.Curve.CurveBasic as Cur
reload(Cur)
############################################################################################### UI
def detachwdRig(*arg):                                                                                                                          
    if cmds.window("detach_Rig", exists=True):
        cmds.deleteUI("detach_Rig")
    rig_Detach = cmds.window("detach_Rig", title="tools_Rig Tri_3D", sizeable=False, resizeToFitChildren=True, w=300)
    cmds.windowPref("detach_Rig", remove=True)
    cmds.showWindow(rig_Detach)
################################################################ Rigs
################################################################

    cmds.columnLayout("Rig", w=300)
    cmds.separator(w=300, style="in")
    cmds.separator(w=300, style="in")
    cmds.setParent("Rig")
    cmds.rowColumnLayout("Connect_Layout", w=300, nc=5)
    cmds.button(l="Attribute", c=func.addattribute, w=60)
    cmds.button(label="Set", c=func.setdrivenkey, w=60)
    cmds.button(label="Connect", c=func.connectEditor, w=60)
    cmds.button(label="Node", c=func.Node, w=60)
    cmds.button(label="Influe", c=func.addinfluence, w=60)
    cmds.button(label="Group", c=func.groupobj, w=60)
    cmds.button(label="Lock", c=func.lockandhide, w=60)
    cmds.button(label="Color", c=func.add_color_attribute, w=60)
    cmds.button(label="Blend", c=func.add_blend_attribute, w=60)
    cmds.button(l="Channel", c=func.channelcontrol, w=60)

    cmds.setParent("Rig")
    cmds.frameLayout("Controller", w=300, cll=True, cl=False)
    cmds.columnLayout("Controller_Main", w=300)

    cmds.setParent("Controller_Main")
    cmds.rowColumnLayout("Controller_Layout_Rig", w=300, nc=6)
    ButtonLocParent1 = cmds.textField("scaleTextField", w=40, ec=func.ctrlIn, placeholderText="_____")
    cmds.symbolButton(image=IMAGE_PATH + "/objtoctrl.png",  c=func.ctrlIn, w=40, h=40)
    cmds.symbolButton(image=IMAGE_PATH + "/add1ctrl.png",  c=func.create1Ctrl, w=40, h=40)
    cmds.symbolButton(image=IMAGE_PATH + "/add2ctrl.png",  c=func.create2Ctrl, w=40, h=40)
    ButtonLocParent = cmds.symbolButton(image=IMAGE_PATH + "/Locator.png", w=40, h=40, c=func.ctrlInB)
    cmds.symbolButton(image=IMAGE_PATH + "/jointSize.png", c=Rig.createJoint, w=40, h=40)
    
    cmds.setParent("Controller_Main")
    cmds.frameLayout("Fk_Controller", w=300, cll=True, cl=True)
    cmds.rowColumnLayout("Set_FK", w=150, nc=2)
    cmds.textField('cNames', w=150, placeholderText="Name")
    cmds.intField('Values' , value = 3, w=150)
    cmds.button(label = 'Create Locator',c=func.guidebuild, w=150)
    cmds.button( label = 'Create Controlers', c=func.CreateRevFK, w=150)

    cmds.setParent("Controller_Main")
    cmds.frameLayout("Curve", w=300, cll=True, cl=True)
    cmds.columnLayout("Curve_Layout_Main", w=300)
    cmds.rowColumnLayout("Curve_Layout", w=300, nc=7)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton02.png", w=42, h=42, c=Cur.cubeCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton08.png", w=42, h=42, c=Cur.pringleCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton11.png", w=42, h=42, c=Cur.handCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton12.png", w=42, h=42, c=Cur.footCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton46.png", w=42, h=42, c=Cur.VerticalSlider)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton47.png", w=42, h=42, c=Cur.handPet)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton03.png", w=42, h=42, c=Cur.arrowTriangle)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton09.png", w=42, h=42, c=Cur.LocatorCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton10.png", w=42, h=42, c=Cur.circleD)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton19.png", w=42, h=42, c=Cur.ccButton19)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton17.png", w=42, h=42, c=Cur.plusCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton23.png", w=42, h=42, c=Cur.circleP)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton27.png", w=42, h=42, c=Cur.rotateCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton28.png", w=42, h=42, c=Cur.axisC)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton29.png", w=42, h=42, c=Cur.arrowCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton32.png", w=42, h=42, c=Cur.circleAround)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton35.png", w=42, h=42, c=Cur.wardCtrl)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton36.png", w=42, h=42, c=Cur.EyeCtrl)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton38.png", w=42, h=42, c=Cur.fourAround)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton40.png", w=42, h=42, c=Cur.ccButton40)
    cmds.symbolButton(image = IMAGE_PATH + "/ccButton43.png", w=42, h=42, c=Cur.ccButton43)
    cmds.symbolButton(image = IMAGE_PATH + "/ccSquare.png", w=42, h=42, c=Cur.squareCurve)
    cmds.symbolButton(image = IMAGE_PATH + "/ccSlider.png", w=42, h=42, c=Cur.functionsCurve)

    cmds.setParent("Curve_Layout_Main")
    cmds.columnLayout("Curve_Layout_cl", w=300, columnAttach = ('left', 5))
    cmds.colorIndexSliderGrp(Cur.ctrlColor, minValue = 1, maxValue = 31, value = 16, columnWidth = (1,60), columnWidth2 = (1, 220),\
                              dragCommand = Cur.hideManipulator, changeCommand = Cur.showManipulator)    
    
    cmds.setParent("Controller_Main")
    cmds.frameLayout("Change Color", w=300, cll=True, cl=True)
    cmds.rowColumnLayout("ChangeColor_Layout", w=300, nc=5)
    cmds.button(l="Refill",c=func.refillcolorctrl, w=49, backgroundColor=[1,1,1])
    cmds.canvas(w=59, rgb=[1,0,0], pressCommand=func.redColorCtrl)
    cmds.canvas(w=59, rgb=[0.9,0.4,0.4], pressCommand=func.pinkColorCtrl)
    cmds.canvas(w=59, rgb=[1,1,0], pressCommand=func.yellowColorCtrl)
    cmds.canvas(w=59, rgb=[0,1,1], pressCommand=func.blueLColorCtrl)
    cmds.canvas(w=59, rgb=[0,1,0], pressCommand=func.greenColorCtrl)
    cmds.canvas(w=59, rgb=[1,1,1], pressCommand=func.whileColorCtrl)
    cmds.canvas(w=59, rgb=[1,0,1], pressCommand=func.purpleColorCtrl)
    cmds.canvas(w=59, rgb=[0,0,1], pressCommand=func.blueColorCtrl)
    cmds.canvas(w=59, rgb=[0,0,0], pressCommand=func.blackColorCtrl)

    cmds.setParent("Controller_Main")
    cmds.frameLayout("Modify", w=300, cll=True, cl=False)
    cmds.columnLayout("Modify_Layout", w=300)

    cmds.setParent("Modify_Layout")
    cmds.rowColumnLayout("Modify_Layout", w=300, nc=7, backgroundColor=[0.284,0.352,0.352])
    cmds.symbolButton(image=IMAGE_PATH + "/menuIconSelect.png", w=42, h=42, c=func.SelectHierarchy)
    cmds.symbolButton(image=IMAGE_PATH + "/deleteHist.png", w=42, h=42, c=func.deleteHistory)
    cmds.symbolButton(image=IMAGE_PATH + "/FreezeTransform.png", w=42, h=42, c=func.freezeTrans)
    cmds.symbolButton(image=IMAGE_PATH + "/CenterPivot.png", w=42, h=42, c=func.centerPivot)
    cmds.symbolButton(image=IMAGE_PATH + "/pivotReset.png", w=42, h=42, c=func.resetPivot)
    cmds.symbolButton(image=IMAGE_PATH + "/match.png", w=42, h=42, c=func.MatchTransform)
    cmds.symbolButton(image=IMAGE_PATH + "/unfreetransform.png", w=42, h=42, c=func.unFreezeTrans)
    cmds.symbolButton(image=IMAGE_PATH + "/circle.png", w=42, h=42, c=func.createCircle)
    cmds.symbolButton(image=IMAGE_PATH + "/pencil.png", w=42, h=42, c=func.PencilCurveTool)
    cmds.symbolButton(image=IMAGE_PATH + "/curveEP.png", w=42, h=42, c=func.EPCurveTool)
    cmds.symbolButton(image=IMAGE_PATH + "/ngSkinTools2ShelfIcon.png", w=42, h=42, c=func.openNgskin)
    cmds.symbolButton(image=IMAGE_PATH + "/textureEditor.png", w=42, h=42, c=func.TextureViewWindow)
    cmds.symbolButton(image=IMAGE_PATH + "/getGraphEditor.png", w=42, h=42, c=func.graphEditor)
    cmds.symbolButton(h=30, w=30, image= IMAGE_PATH + "/jointSize.png", c=func.jointSizeOptions) 
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/kinJoint.png" , c=func.jointTools)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/kinMirrorJoint_S.png" , c=func.jointMirror)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/orientJoint.png", c=func.orientJoint)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/smoothSkin.png" , c=func.SmoothBindSkin)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/detachSkin.png" , c=func.DetachSkin)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/copySkinWeight.png" , c=func.CopySkinWeights)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/lattice.png", c=func.CreateLattice)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/parentConstraint.png" , c=func.ParentConstraintOptions)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/orientConstraint.png" , c=func.OrientConstraint)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/aimConstraint.png" , c=func.AimConstraint)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/posConstraint.png" , c=func.PointConstraint)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/scaleConstraint.png" , c=func.ScaleConstraintOptions)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/poleVectorConstraint.png" , c=func.PoleVectorConstraint)
    cmds.symbolButton(h=42, w=42, image= IMAGE_PATH +"/blendShape.png", c=func.CreateBlendShape)

    #cmds.symbolButton(image=IMAGE_PATH + "/blendShapeEditor.png", w=42, h=42, c=func.ShapeEditor)

    cmds.setParent("Rig")
    cmds.frameLayout("Add joint to curve", w=300, cll=True, cl=True)
    cmds.rowColumnLayout("Layout7", w=300, nc=1)
    cmds.textField("loadcurve",ed=0, w=300)
    cmds.button( label='Add Curve' ,c =func.addcurve, w=300)
    cmds.textField("numberofjointfeild",pht="Number of Joints", w=300)
    cmds.button( label='Run',c=func.inbetweenjoints, w=300)

    cmds.setParent("Rig")
    cmds.frameLayout("Rig tools", w=300, cll=True, cl=True)
    cmds.columnLayout("rigTools_Layout", w=300)
    cmds.rowColumnLayout("Rig_Char", w=300, nc=6)
    cmds.symbolButton(image=IMAGE_PATH + "/eyeRig.png", w=40, h=40, c=Rig.run_eye_lid_setup)
    ############################################################## wheel tools
    cmds.setParent("rigTools_Layout")
    cmds.frameLayout("Wheel tools", w=300, cll=True, cl=True)
    cmds.columnLayout("Engine_rig")
    cmds.rowColumnLayout("Rig_Engine", w=300, nc=6)
    cmds.symbolButton(image=IMAGE_PATH + "/VibratingAdd.png", w=40, h=40, c=func.loopVibrating, backgroundColor=[0.284,0.352,0.352])
    cmds.symbolButton(image=IMAGE_PATH + "/VibratingOn.png", w=40, h=40, c=func.addExpressionToObject, backgroundColor=[0.284,0.352,0.352])
    #cmds.symbolButton(image=IMAGE_PATH + "/Wheel.png", w=40, h=40, c=Rig.Ui, backgroundColor=[0.284,0.352,0.352])

    ############################################################## auto wheel
    cmds.setParent("Engine_rig")
    pm.columnLayout('mainWindowColumnLayout', adjustableColumn=1, w=300)
    pm.rowLayout(numberOfColumns=2, w=300, adj=2, columnAlign=(1, 'center'), columnAttach=[(1, 'both', 0), (2, 'both', 0)] )
    pm.text('textName', label='Name: ', w=40)
    pm.textField('textFieldName', text='', w=220)

    pm.setParent('mainWindowColumnLayout')
    #pm.rowLayout(numberOfColumns=2, w=300, columnAlign=(1, 'center'), columnAttach=[(1, 'both', 0), (2, 'both', 0)] )
    pm.rowColumnLayout("Checkbox_autoWheel", w=300, nc=4)
    pm.checkBox(Rig.checkBox1, label='Selected ', w=75, cc= Rig.changestate)
    pm.checkBox(Rig.checkBox2, label='Position', w=75)
    #pm.setParent('mainWindowColumnLayout')
    #pm.rowLayout(numberOfColumns=2, w=300, columnAlign=(1, 'center'), columnAttach=[(1, 'both', 0), (2, 'both', 0)] )
    pm.checkBox(Rig.checkBox3, label='Bind Skin', w=75, cc=Rig.changestatebind,enable=0)
    pm.checkBox(Rig.checkBox4, label='Constrain', w=75, cc=Rig.changestatecons,enable=0)
    pm.setParent('mainWindowColumnLayout')
    pm.optionMenu(Rig.optionMenu1, label='Move Direction :',ni=6)
    pm.menuItem('x', label='x' )
    pm.menuItem('y', label='y' )
    pm.menuItem('z', label='z' )
    pm.menuItem('xx', label='-x' )
    pm.menuItem('yy', label='-y' )
    pm.menuItem('zz', label='-z' )
    pm.optionMenu(Rig.optionMenu1, e=1, v='z')
    pm.rowLayout(numberOfColumns=2, w=300, columnAlign=(1, 'right'), columnAttach=[(1, 'both', 0), (2, 'both', 0)] )
    pm.button(Rig.buttonMenu1, label=Rig.labelButtonMenu1, command=Rig.buttonMenu1Function, w=150)
    pm.button(Rig.buttonMenu2, label=Rig.labelButtonMenu2, command=Rig.buttonMenu2Function, w=150)

